{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { createRef, useState, useEffect } from 'react';\nimport classes from './bestSellers.scss';\nimport Link from 'next/link';\nimport axios from \"lib/axiosEnv\";\nimport ImageProd from \"components/Shop/elements/imageProduct\";\nlet _intervalIndex = 0;\nlet _boolDir = false;\n\nconst Seller = props => {\n  let {\n    0: count,\n    1: setCount\n  } = useState(_intervalIndex);\n  useEffect(() => {\n    if (props.playPause) {\n      let id = setInterval(() => {\n        if (!_boolDir) {\n          setCount(count += 1);\n          _intervalIndex = count;\n\n          if (count >= props.sellerCount - props.wrapCount) {\n            _boolDir = true;\n          }\n        } else {\n          setCount(count--);\n          _intervalIndex = count;\n\n          if (count <= 0) {\n            _boolDir = false;\n          }\n        }\n\n        props.refParent.current.style.transform = 'translateY(' + -(count * props.allow / props.wrapCount) + 'px)';\n      }, 3000);\n      return () => clearInterval(id);\n    }\n  }, [props.playPause]);\n\n  const _everySeller = props.products.map((item, index) => {\n    return __jsx(\"div\", {\n      className: classes['seller-item'],\n      key: index,\n      style: {\n        'height': props.heightRef + 'px'\n      }\n    }, __jsx(ImageProd, {\n      src: item.photo\n    }), __jsx(\"div\", {\n      className: classes['seller-item-info']\n    }, __jsx(\"a\", {\n      href: /product/ + item._id\n    }, item.name), item.sale ? __jsx(\"del\", null, item.price.toFixed(2), \" $\") : '', item.sale ? __jsx(\"span\", {\n      className: classes['seller-item-info-sale-price']\n    }, (item.price - Math.round(item.price * item.sale / 100)).toFixed(2), \" $\") : '', !item.sale ? __jsx(\"span\", {\n      className: classes['seller-item-info-sale-price']\n    }, item.price.toFixed(2), \" $\") : ''));\n  });\n\n  return _everySeller;\n};\n\nclass BestSellers extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      //Get Best Sellers\n      const {\n        data\n      } = await axios.get('/api/products/getBestSellers', {\n        params: {\n          count: 5\n        }\n      });\n      if (data.error) console.error(data.error);else {\n        this.setState({\n          sellers: data.sellers\n        });\n      }\n\n      if (this.bestSellerRef.current) {\n        let _height = 0;\n        new Array(this.state.sellers.length).fill('').forEach((_, index) => {\n          if (index <= this.state.sellers.length - this.state.wrapCountSeller) {\n            _height += this.state.badgeHeight;\n          }\n        });\n        this.setState({\n          height: _height,\n          sellerLength: this.state.sellers.length\n        });\n      }\n    });\n\n    this.state = {\n      playClass: true,\n      activeIndex: 0,\n      height: 0,\n      sellerLength: 0,\n      badgeHeight: 111,\n      wrapCountSeller: 3,\n      sellers: []\n    };\n    this.bestSellerRef = React.createRef();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: classes['best-sellers-wrapper']\n    }, __jsx(\"div\", {\n      className: classes['best-sellers-wrapper-head']\n    }, __jsx(\"h4\", null, \"BestSeller\"), __jsx(\"p\", null, __jsx(\"span\", {\n      className: `lnr-play-pause ${this.state.playClass ? 'paused' : ''}`,\n      onClick: () => this.setState({\n        playClass: !this.state.playClass,\n        direction: ''\n      })\n    }))), __jsx(\"div\", {\n      className: classes['best-sellers-wrapper-content'],\n      style: {\n        height: this.state.height + 'px'\n      }\n    }, __jsx(\"div\", {\n      ref: this.bestSellerRef,\n      className: classes['parent-scrolling']\n    }, this.state.height > 0 && __jsx(Seller, {\n      sellerCount: this.state.sellerLength,\n      wrapCount: this.state.wrapCountSeller,\n      products: this.state.sellers,\n      refParent: this.bestSellerRef,\n      actIndex: this.state.activeIndex,\n      direction: this.state.direction,\n      allow: this.state.height,\n      heightRef: this.state.badgeHeight,\n      playPause: this.state.playClass\n    }))));\n  }\n\n}\n\nexport default BestSellers;","map":null,"metadata":{},"sourceType":"module"}