{"ast":null,"code":"var _Date$now = require(\"@babel/runtime-corejs2/core-js/date/now\");\n\nvar axios = require('axios');\n\nvar _require = require('../utils/auth'),\n    getToken = _require.getToken,\n    removeCookieByKey = _require.removeCookieByKey;\n\nvar jwtDecode = require('jwt-decode');\n\nvar axiosInstance = axios.create({\n  baseURL: process.env.NODE_ENV !== 'production' ? process.env.CLIENT_URL : process.env.PROD_URL\n});\naxiosInstance.interceptors.request.use(function (req) {\n  var token = getToken();\n\n  if (token && jwtDecode(token).exp < _Date$now() / 1000) {\n    removeCookieByKey('token');\n    location.href = '/';\n  }\n\n  return req;\n});\nmodule.exports = axiosInstance;","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/OVENO/lib/axiosEnv.js"],"names":["axios","require","getToken","removeCookieByKey","jwtDecode","axiosInstance","create","baseURL","process","env","NODE_ENV","CLIENT_URL","PROD_URL","interceptors","request","use","req","token","exp","location","href","module","exports"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;eAIIA,OAAO,CAAC,eAAD,C;IAFPC,Q,YAAAA,Q;IACAC,iB,YAAAA,iB;;AAEJ,IAAMC,SAAS,GAAGH,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAMI,aAAa,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCF,OAAO,CAACC,GAAR,CAAYE,UAApD,GAAiEH,OAAO,CAACC,GAAR,CAAYG;AADvD,CAAb,CAAtB;AAIAP,aAAa,CAACQ,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAAAC,GAAG,EAAI;AAC1C,MAAMC,KAAK,GAAGf,QAAQ,EAAtB;;AACA,MAAIe,KAAK,IAAIb,SAAS,CAACa,KAAD,CAAT,CAAiBC,GAAjB,GAAuB,cAAa,IAAjD,EAAuD;AACnDf,IAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAgB,IAAAA,QAAQ,CAACC,IAAT,GAAgB,GAAhB;AACH;;AACD,SAAOJ,GAAP;AACH,CAPD;AAQAK,MAAM,CAACC,OAAP,GAAiBjB,aAAjB","sourcesContent":["const axios = require('axios');\r\nconst {\r\n    getToken,\r\n    removeCookieByKey\r\n} = require('../utils/auth');\r\nconst jwtDecode = require('jwt-decode');\r\nconst axiosInstance = axios.create({\r\n    baseURL: process.env.NODE_ENV !== 'production' ? process.env.CLIENT_URL : process.env.PROD_URL\r\n});\r\n\r\naxiosInstance.interceptors.request.use(req => {\r\n    const token = getToken();\r\n    if (token && jwtDecode(token).exp < Date.now() / 1000) {\r\n        removeCookieByKey('token');\r\n        location.href = '/';\r\n    }\r\n    return req;\r\n});\r\nmodule.exports = axiosInstance;\r\n"]},"metadata":{},"sourceType":"script"}