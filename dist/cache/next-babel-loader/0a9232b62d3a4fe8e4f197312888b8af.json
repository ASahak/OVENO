{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport DumpLayout from 'components/shared/Layouts/dump';\nimport Icon from 'components/Icons/icon';\nimport UI_ELEMENTS from 'components/shared/UI';\nimport Link from 'next/link';\nimport { useForm } from 'react-hook-form';\nimport { EMAIL_VALIDATOR, PASSWORD_VALIDATOR } from 'utils';\nimport axios from \"lib/axiosEnv\";\nimport { toast } from \"react-toastify\";\n\nvar _require = require('../utils/auth'),\n    setToken = _require.setToken;\n\nvar generateAlert = function generateAlert(reset, setLoadingRegister, typeAlert, message, _timeout) {\n  reset();\n  setLoadingRegister(false);\n  toast[typeAlert](message, {\n    position: \"top-right\",\n    autoClose: _timeout,\n    pauseOnHover: false\n  });\n};\n\nfunction LoginForm() {\n  var _timeout = 3000;\n\n  var _useState = useState(false),\n      loadingLogin = _useState[0],\n      setLoadingLogin = _useState[1];\n\n  var _useForm = useForm({\n    mode: 'onBlur'\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(dataLogin) {\n      var timeStart, _ref2, data, timeEnd;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoadingLogin(true);\n              timeStart = new Date().getTime();\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post('/api/login/user', dataLogin);\n\n            case 5:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n\n              if (!data.error) {\n                _context.next = 9;\n                break;\n              }\n\n              throw new Error(data.error);\n\n            case 9:\n              setToken(data.token);\n              location.href = '/';\n              _context.next = 18;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0.message, 8);\n              timeEnd = new Date().getTime();\n\n              if (timeEnd - timeStart > _timeout) {\n                generateAlert(reset, setLoadingLogin, 'error', _context.t0.message, _timeout);\n              } else {\n                setTimeout(function () {\n                  generateAlert(reset, setLoadingLogin, 'error', _context.t0.message, _timeout);\n                }, _timeout - (timeEnd - timeStart));\n              }\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(UI_ELEMENTS.Input, {\n    name: \"email\",\n    type: \"email\",\n    refBind: register(EMAIL_VALIDATOR),\n    fullWidth: true,\n    errors: errors.email && errors.email.message,\n    placeholder: \"Email ID\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Input, {\n    refBind: register(PASSWORD_VALIDATOR),\n    errors: errors.password && errors.password.message || errors.password && errors.password.type === 'containsDigit' && 'Use 1 ore more numbers' || errors.password && errors.password.type === 'containsUppercase' && 'Use upper and lower case characters',\n    name: \"password\",\n    type: \"password\",\n    fullWidth: true,\n    placeholder: \"Password\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Button, {\n    type: \"submit\",\n    icon: loadingLogin ? {\n      dir: 'right',\n      element: 'loading'\n    } : {},\n    text: \"Login\",\n    width: 190,\n    size: \"md\"\n  }), __jsx(Link, {\n    href: \"/reset-password\",\n    prefetch: false\n  }, __jsx(\"a\", {\n    className: \"link-to-reset\"\n  }, \"Forgot password? click to reset\")), __jsx(Link, {\n    href: \"/register\",\n    prefetch: false\n  }, __jsx(\"a\", {\n    className: \"link-to-reset\"\n  }, \"I am new here. I want an account\")));\n}\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(Head, null, __jsx(\"title\", null, \"Login\")), __jsx(\"main\", null, __jsx(\"div\", {\n        className: \"login-form-container\"\n      }, __jsx(\"div\", {\n        className: \"form-icon\"\n      }, __jsx(Icon, {\n        name: \"user\"\n      })), __jsx(\"h4\", {\n        className: \"title-form\"\n      }, \"Member Login\"), __jsx(LoginForm, null))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nLogin.Layout = DumpLayout;\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}