{"ast":null,"code":"var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nconst cookie = require('js-cookie');\n\nconst axios = require('axios');\n\nconst jwtDecode = require('jwt-decode');\n\nmodule.exports = {\n  setToken: token => {\n    cookie.set('token', token, {\n      expires: 1\n      /*1 day*/\n\n    });\n  },\n  getToken: () => {\n    return cookie.get('token');\n  },\n  getCookieByKey: key => {\n    return cookie.get(key);\n  },\n  removeCookieByKey: key => {\n    cookie.remove(key);\n  },\n  isLoggedUser: () => {\n    return new _Promise(async (resolve, reject) => {\n      const token = module.exports.getToken();\n\n      try {\n        if (token) {\n          const user = await axios.get('/api/user/' + jwtDecode(token).userId);\n\n          if (user) {\n            if (user.data.error) reject(user.data.error);\n            resolve(user);\n          }\n        } else reject(\"There isn't logged user\");\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}