{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport classes from './navBar.scss';\nimport Router, { useRouter } from 'next/router';\n\nconst NavBarWithRouter = props => {\n  const router = useRouter();\n  return __jsx(NavBar, _extends({}, props, {\n    router: router\n  }));\n};\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this._navBarRef = React.createRef();\n    this.state = {\n      activeRouteIndex: 1,\n      items: [{\n        text: 'Home',\n        link: {\n          pathname: '/',\n          state: {\n            id: 1,\n            title: 'Home'\n          }\n        }\n      }, {\n        text: 'Sale Products',\n        link: {\n          pathname: '/shop',\n          state: {\n            id: 2,\n            title: 'Products'\n          }\n        }\n      }, {\n        text: 'Contact Us',\n        link: {\n          pathname: '/contact',\n          state: {\n            id: 3,\n            title: 'Contact Us'\n          }\n        }\n      }, {\n        text: 'About Us',\n        link: {\n          pathname: '/about',\n          state: {\n            id: 4,\n            title: 'About Us'\n          }\n        }\n      }],\n      _bindWavePosition: undefined\n    };\n    this.__goToRoute = this.__goToRoute.bind(this);\n    this.RouterEvent = this.RouterEvent.bind(this);\n    Router.events.on('routeChangeComplete', this.RouterEvent);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeComplete', this.RouterEvent);\n  }\n\n  RouterEvent(url) {\n    this.setState({\n      activeRouteIndex: this.props.router.query ? this.props.router.query.indexPage || this.__getDefaultIndexRouter() : 1\n    }, () => {\n      this._getPositionOfWave(this.state.activeRouteIndex);\n    });\n  }\n\n  __goToRoute(leave) {\n    this._getPositionOfWave(leave === 'leave' ? this.state.activeRouteIndex : leave);\n  }\n\n  __getDefaultIndexRouter() {\n    let index = null;\n    this.state.items.map((_, _ind) => {\n      if (_.link.pathname === this.props.router.route) {\n        index = _ind + 1;\n      }\n    });\n    return index;\n  }\n\n  componentDidMount() {\n    this.setState({\n      activeRouteIndex: this.props.router.query ? this.props.router.query.indexPage || this.__getDefaultIndexRouter() : 1\n    }, () => {\n      this._getPositionOfWave(this.state.activeRouteIndex);\n    });\n  }\n\n  _getPositionOfWave(index) {\n    index ? this.setState({\n      _bindWavePosition: {\n        top: 0,\n        opacity: 1,\n        width: this._navBarRef.current.querySelectorAll('a')[index - 1].getBoundingClientRect().width + 'px',\n        left: this._navBarRef.current.querySelectorAll('a')[index - 1].offsetLeft + 'px'\n      }\n    }) : this.setState({\n      _bindWavePosition: {\n        opacity: 0\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  render() {\n    const item = this.state.items.map(_ => __jsx(\"a\", {\n      key: _.link.state.id,\n      href: _.link.pathname,\n      onMouseEnter: () => this.__goToRoute(_.link.state.id),\n      \"data-index\": _.link.state.id\n    }, _.text));\n    return __jsx(\"div\", {\n      className: classes['nav-bar-ln']\n    }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n      xs: \"12\",\n      md: \"8\",\n      lg: \"9\"\n    }, __jsx(\"nav\", {\n      ref: this._navBarRef,\n      onMouseLeave: () => this.__goToRoute('leave')\n    }, __jsx(\"span\", {\n      className: classes['wave_active'],\n      style: this.state._bindWavePosition\n    }), item)), __jsx(Col, {\n      className: classes['phone-nav-bar'],\n      xs: \"4\",\n      md: \"4\",\n      lg: \"3\"\n    }, __jsx(\"div\", {\n      className: classes['call-us-wrap']\n    }, __jsx(\"a\", {\n      href: \"tel:+37494129604\",\n      onClick: e => e.preventDefault()\n    }, \" Call Us +374 94 12 96 04\"))))));\n  }\n\n}\n\nexport default NavBarWithRouter;","map":null,"metadata":{},"sourceType":"module"}