{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport classes from './home-slider.scss';\nexport default class HomeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 0,\n      activeIndex: 0,\n      dotsCount: null,\n      styleWrapper: {}\n    };\n    this.images = ['slider1', 'slider2', 'slider3'];\n    this._slide = this._slide.bind(this);\n    this.touchStart = this.touchStart.bind(this);\n    this.touchMove = this.touchMove.bind(this);\n    this.touchEnd = this.touchEnd.bind(this);\n    this.getSliderPosition = this.getSliderPosition.bind(this);\n    this.slider = React.createRef();\n    this.svg = React.createRef();\n    this.autoPlayInterval = null;\n    this.progressSpinner = null;\n    this.touchX = 0;\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.dots) {\n      this.setState({\n        dotsCount: this.images.length\n      });\n    }\n\n    this.setState({\n      styleWrapper: {\n        'transform': 'translate3d(0px, 0px, 0px)'\n      }\n    });\n  }\n\n  handleVisibilityChange(hidden) {\n    if (document[hidden]) {\n      clearInterval(this.progressSpinner);\n      clearInterval(this.autoPlayInterval);\n    } else {\n      clearInterval(this.progressSpinner);\n      clearInterval(this.autoPlayInterval);\n      this.IntervalProgress();\n      this.AutoPlayWithTimer(this.state.timer);\n    }\n  }\n\n  componentDidMount() {\n    let hidden, visibilityChange;\n\n    if (typeof document.hidden !== 'undefined') {\n      // Opera 12.10 and Firefox 18 and later support\n      hidden = 'hidden';\n      visibilityChange = 'visibilitychange';\n    } else if (typeof document.msHidden !== 'undefined') {\n      hidden = 'msHidden';\n      visibilityChange = 'msvisibilitychange';\n    } else if (typeof document.webkitHidden !== 'undefined') {\n      hidden = 'webkitHidden';\n      visibilityChange = 'webkitvisibilitychange';\n    }\n\n    if (typeof document.addEventListener === 'undefined' || hidden === undefined) {\n      console.log('This demo requires a browser, such as Google Chrome or Firefox, that supports the Page Visibility API.');\n    } else {\n      // Handle page visibility change\n      document.addEventListener(visibilityChange, this.handleVisibilityChange.bind(this, hidden), false);\n    } // AutoPlay\n\n\n    if (this.props.autoplay) {\n      let timer = this.props.timer || 3000;\n      this.setState({\n        timer: timer\n      }, () => {\n        this.IntervalProgress();\n        this.AutoPlayWithTimer(timer);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.autoPlayInterval);\n    clearInterval(this.progressSpinner);\n  }\n\n  touchStart(event) {\n    this.touchX = event.touches[0].pageX;\n  }\n\n  touchMove(event) {\n    clearInterval(this.progressSpinner);\n    clearInterval(this.autoPlayInterval);\n    this.getSliderPosition('touchMove', event.touches[0].pageX);\n  }\n\n  touchEnd(event) {\n    clearInterval(this.progressSpinner);\n    clearInterval(this.autoPlayInterval);\n    this.getSliderPosition('touchEnd', event.changedTouches[0].pageX);\n  }\n\n  IntervalProgress() {\n    let percentage = 0;\n    clearInterval(this.progressSpinner);\n    this.progressSpinner = setInterval(() => {\n      if (this.svg.current && percentage < 100) {\n        percentage += 1;\n        this.svg.current.style.background = 'conic-gradient(#f01b48 ' + percentage + '%, 0, #f4f4f4 66%)';\n      }\n    }, this.state.timer / 100);\n  }\n\n  AutoPlayWithTimer(timer) {\n    this.autoPlayInterval = setInterval(() => {\n      this.IntervalProgress();\n      let _activeIndex = this.state.activeIndex;\n      if (_activeIndex === this.state.dotsCount - 1) _activeIndex = 0;else _activeIndex++;\n      this.setState({\n        activeIndex: _activeIndex\n      }, () => {\n        this.getSliderPosition();\n      });\n    }, timer);\n  }\n\n  Slide(name, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: classes['main-slider__slide']\n    }, __jsx(\"img\", {\n      src: require('../../../assets/images/global/' + name + '.jpg'),\n      alt: \"\"\n    }));\n  }\n\n  _slide(index) {\n    if (index !== this.state.activeIndex) {\n      clearInterval(this.progressSpinner);\n      this.IntervalProgress();\n      clearInterval(this.autoPlayInterval);\n      this.setState({\n        activeIndex: index\n      }, () => {\n        this.getSliderPosition();\n        this.IntervalProgress();\n        this.props.autoplay && this.AutoPlayWithTimer(this.state.timer);\n      });\n    }\n  }\n\n  getSliderPosition(type, touchX) {\n    let widthSlider = this.slider.current && this.slider.current.getBoundingClientRect().width || 0;\n\n    if (type === 'touchMove') {\n      this.setState({\n        styleWrapper: {\n          'transition': '0s',\n          'transform': 'translate3d(' + -(this.touchX - touchX + widthSlider * this.state.activeIndex) + 'px, 0px, 0px)'\n        }\n      });\n    } else if (type === 'touchEnd') {\n      if (this.touchX > touchX) {\n        let ind = this.state.activeIndex;\n        if (ind === this.state.dotsCount - 1) ind = this.state.dotsCount - 1;else ind++;\n        this.setState({\n          activeIndex: ind\n        }, () => {\n          this.getSliderPosition();\n          this.IntervalProgress();\n          this.AutoPlayWithTimer(this.state.timer);\n        });\n      } else {\n        let ind = this.state.activeIndex;\n        if (ind === 0) ind = 0;else ind--;\n        this.setState({\n          activeIndex: ind\n        }, () => {\n          this.getSliderPosition();\n          this.IntervalProgress();\n          this.AutoPlayWithTimer(this.state.timer);\n        });\n      }\n    } else {\n      this.setState({\n        styleWrapper: {\n          'transform': 'translate3d(' + -(widthSlider * this.state.activeIndex) + 'px, 0px, 0px)'\n        }\n      });\n    }\n  }\n\n  render() {\n    const Dots = () => {\n      const dots = Array(this.state.dotsCount).fill('').map((_, index) => {\n        return __jsx(\"span\", {\n          onClick: () => this._slide(index),\n          className: `${index === this.state.activeIndex ? 'active-bullet' : ''} bullet`,\n          key: index\n        });\n      });\n      return __jsx(\"div\", {\n        className: \"slider-dots\"\n      }, dots);\n    };\n\n    const Spinner = () => {\n      return __jsx(\"div\", {\n        className: \"spinner_wrapper\"\n      }, __jsx(\"div\", {\n        className: \"circle\",\n        ref: this.svg\n      }));\n    };\n\n    return __jsx(\"div\", {\n      className: classes['main-slider'],\n      ref: this.slider\n    }, __jsx(\"div\", {\n      className: classes['main-slider__container'],\n      onTouchStart: this.touchStart,\n      onTouchMove: this.touchMove,\n      onTouchEnd: this.touchEnd\n    }, this.props.autoplay && __jsx(Spinner, null), __jsx(\"div\", {\n      className: classes['main-slider__wrapper'],\n      style: this.state.styleWrapper\n    }, this.images.map(this.Slide))), this.props.dots && __jsx(Dots, null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/OVENO/components/Home/Slider/home-slider.jsx"],"names":["React","classes","HomeSlider","Component","constructor","props","state","timer","activeIndex","dotsCount","styleWrapper","images","_slide","bind","touchStart","touchMove","touchEnd","getSliderPosition","slider","createRef","svg","autoPlayInterval","progressSpinner","touchX","UNSAFE_componentWillMount","dots","setState","length","handleVisibilityChange","hidden","document","clearInterval","IntervalProgress","AutoPlayWithTimer","componentDidMount","visibilityChange","msHidden","webkitHidden","addEventListener","undefined","console","log","autoplay","componentWillUnmount","event","touches","pageX","changedTouches","percentage","setInterval","current","style","background","_activeIndex","Slide","name","index","require","type","widthSlider","getBoundingClientRect","width","ind","render","Dots","Array","fill","map","_","Spinner"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport classes from './home-slider.scss'\r\n\r\nexport default class HomeSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 0,\r\n            activeIndex: 0,\r\n            dotsCount: null,\r\n            styleWrapper: {}\r\n        };\r\n        this.images = ['slider1', 'slider2', 'slider3'];\r\n        this._slide = this._slide.bind(this);\r\n        this.touchStart = this.touchStart.bind(this);\r\n        this.touchMove = this.touchMove.bind(this);\r\n        this.touchEnd = this.touchEnd.bind(this);\r\n        this.getSliderPosition = this.getSliderPosition.bind(this);\r\n        this.slider = React.createRef();\r\n        this.svg = React.createRef();\r\n        this.autoPlayInterval = null;\r\n        this.progressSpinner = null;\r\n        this.touchX = 0;\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        if (this.props.dots) {\r\n            this.setState({\r\n                dotsCount: this.images.length\r\n            })\r\n        }\r\n        this.setState({\r\n            styleWrapper: { 'transform': 'translate3d(0px, 0px, 0px)' }\r\n        })\r\n    }\r\n\r\n    handleVisibilityChange(hidden) {\r\n        if (document[hidden]) {\r\n            clearInterval(this.progressSpinner);\r\n            clearInterval(this.autoPlayInterval);\r\n        } else {\r\n            clearInterval(this.progressSpinner);\r\n            clearInterval(this.autoPlayInterval);\r\n            this.IntervalProgress();\r\n            this.AutoPlayWithTimer(this.state.timer);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let hidden, visibilityChange;\r\n        if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\r\n            hidden = 'hidden';\r\n            visibilityChange = 'visibilitychange';\r\n        } else if (typeof document.msHidden !== 'undefined') {\r\n            hidden = 'msHidden';\r\n            visibilityChange = 'msvisibilitychange';\r\n        } else if (typeof document.webkitHidden !== 'undefined') {\r\n            hidden = 'webkitHidden';\r\n            visibilityChange = 'webkitvisibilitychange';\r\n        }\r\n\r\n        if (typeof document.addEventListener === 'undefined' || hidden === undefined) {\r\n            console.log('This demo requires a browser, such as Google Chrome or Firefox, that supports the Page Visibility API.');\r\n        } else {\r\n            // Handle page visibility change\r\n            document.addEventListener(visibilityChange, this.handleVisibilityChange.bind(this, hidden), false);\r\n        }\r\n\r\n        // AutoPlay\r\n        if (this.props.autoplay) {\r\n            let timer = this.props.timer || 3000;\r\n            this.setState({\r\n                timer: timer\r\n            }, () => {\r\n                this.IntervalProgress();\r\n                this.AutoPlayWithTimer(timer);\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.autoPlayInterval);\r\n        clearInterval(this.progressSpinner);\r\n    }\r\n\r\n    touchStart(event) {\r\n        this.touchX = event.touches[0].pageX;\r\n    }\r\n\r\n    touchMove(event) {\r\n        clearInterval(this.progressSpinner);\r\n        clearInterval(this.autoPlayInterval);\r\n        this.getSliderPosition('touchMove', event.touches[0].pageX)\r\n    }\r\n\r\n    touchEnd(event) {\r\n        clearInterval(this.progressSpinner);\r\n        clearInterval(this.autoPlayInterval);\r\n        this.getSliderPosition('touchEnd', event.changedTouches[0].pageX)\r\n    }\r\n\r\n    IntervalProgress() {\r\n        let percentage = 0;\r\n        clearInterval(this.progressSpinner);\r\n        this.progressSpinner = setInterval(() => {\r\n            if (this.svg.current && percentage < 100) {\r\n                percentage += 1;\r\n                this.svg.current.style.background = 'conic-gradient(#f01b48 ' + percentage + '%, 0, #f4f4f4 66%)';\r\n            }\r\n        }, this.state.timer / 100)\r\n    }\r\n\r\n    AutoPlayWithTimer(timer) {\r\n        this.autoPlayInterval = setInterval(() => {\r\n            this.IntervalProgress();\r\n            let _activeIndex = this.state.activeIndex;\r\n            if (_activeIndex === this.state.dotsCount - 1) _activeIndex = 0;\r\n            else _activeIndex++;\r\n            this.setState({\r\n                activeIndex: _activeIndex\r\n            }, () => {\r\n                this.getSliderPosition()\r\n            });\r\n        }, timer);\r\n    }\r\n\r\n    Slide(name, index) {\r\n        return (\r\n            <div key={index} className={classes['main-slider__slide']}>\r\n                <img src={require('../../../assets/images/global/' + name + '.jpg')} alt=\"\"/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    _slide(index) {\r\n        if (index !== this.state.activeIndex) {\r\n            clearInterval(this.progressSpinner);\r\n            this.IntervalProgress();\r\n            clearInterval(this.autoPlayInterval);\r\n            this.setState({\r\n                activeIndex: index\r\n            }, () => {\r\n                this.getSliderPosition();\r\n                this.IntervalProgress();\r\n                this.props.autoplay && this.AutoPlayWithTimer(this.state.timer);\r\n            })\r\n        }\r\n    }\r\n\r\n    getSliderPosition(type, touchX) {\r\n        let widthSlider = this.slider.current && this.slider.current.getBoundingClientRect().width || 0;\r\n        if (type === 'touchMove') {\r\n            this.setState({\r\n                styleWrapper: {\r\n                    'transition': '0s',\r\n                    'transform': 'translate3d(' + -(this.touchX - touchX + (widthSlider * this.state.activeIndex)) + 'px, 0px, 0px)'\r\n                }\r\n            })\r\n        } else if (type === 'touchEnd') {\r\n            if (this.touchX > touchX) {\r\n                let ind = this.state.activeIndex;\r\n                if (ind === this.state.dotsCount - 1) ind = this.state.dotsCount - 1;\r\n                else ind++;\r\n                this.setState({\r\n                    activeIndex: ind\r\n                }, () => {\r\n                    this.getSliderPosition();\r\n                    this.IntervalProgress();\r\n                    this.AutoPlayWithTimer(this.state.timer);\r\n                });\r\n            } else {\r\n                let ind = this.state.activeIndex;\r\n                if (ind === 0) ind = 0;\r\n                else ind--;\r\n                this.setState({\r\n                    activeIndex: ind\r\n                }, () => {\r\n                    this.getSliderPosition();\r\n                    this.IntervalProgress();\r\n                    this.AutoPlayWithTimer(this.state.timer);\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                styleWrapper: { 'transform': 'translate3d(' + -(widthSlider * this.state.activeIndex) + 'px, 0px, 0px)' }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Dots = () => {\r\n            const dots = Array(this.state.dotsCount).fill('').map((_, index) => {\r\n                return (\r\n                    <span onClick={() => this._slide(index)}\r\n                          className={`${index === this.state.activeIndex ? 'active-bullet' : ''} bullet`}\r\n                          key={index}></span>\r\n                )\r\n            });\r\n            return (\r\n                <div className=\"slider-dots\">\r\n                    {dots}\r\n                </div>\r\n            )\r\n        };\r\n        const Spinner = () => {\r\n            return (\r\n                <div className=\"spinner_wrapper\">\r\n                    <div className=\"circle\" ref={this.svg}></div>\r\n                </div>\r\n            )\r\n        };\r\n        return (\r\n            <div className={classes['main-slider']} ref={this.slider}>\r\n                <div className={classes['main-slider__container']} onTouchStart={this.touchStart}\r\n                     onTouchMove={this.touchMove} onTouchEnd={this.touchEnd}>\r\n                    {(this.props.autoplay) && <Spinner/>}\r\n                    <div className={classes['main-slider__wrapper']} style={this.state.styleWrapper}>\r\n                        {this.images.map(this.Slide)}\r\n                    </div>\r\n                </div>\r\n                {(this.props.dots) && <Dots/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}