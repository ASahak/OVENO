{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from 'react';\nimport App from 'next/app';\nimport DefaultLayout from '../components/shared/default';\nimport { ToastContainer } from \"react-toastify\";\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport { __SET_LOGGED } from 'store/saga';\n\nvar _require = require('../utils/auth'),\n    isLoggedUser = _require.isLoggedUser;\n\nvar Layout =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(Layout, _App);\n\n  var _super = _createSuper(Layout);\n\n  function Layout() {\n    _classCallCheck(this, Layout);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Layout, [{\n    key: \"render\",\n    value: function render() {\n      // Save User's' data to the store\n      isLoggedUser().then(function (res) {\n        __SET_LOGGED(res.data).next();\n      })[\"catch\"](function (err) {\n        console.info(err);\n      });\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          initialProps = _this$props.initialProps;\n      var Layout = Component.Layout || DefaultLayout;\n      return __jsx(React.Fragment, null, __jsx(Provider, {\n        store: store\n      }, __jsx(Layout, null, __jsx(Component, _extends({}, pageProps, initialProps)))), __jsx(ToastContainer, null));\n    }\n  }]);\n\n  return Layout;\n}(App);\n\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}