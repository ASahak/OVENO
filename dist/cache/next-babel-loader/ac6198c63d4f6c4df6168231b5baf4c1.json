{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React, { useRef, useState } from 'react';\nimport Head from 'next/head';\nimport Icon from \"components/Icons/icon\";\nimport DumpLayout from \"components/shared/Layouts/dump\";\nimport UI_ELEMENTS from \"components/shared/UI\";\nimport Link from 'next/link';\nimport { useForm } from 'react-hook-form';\nimport { FULL_NAME_VALIDATOR, EMAIL_VALIDATOR, PASSWORD_VALIDATOR } from 'utils';\nimport axios from \"lib/axiosEnv\";\nimport { toast } from 'react-toastify';\n\nvar _require = require('../utils/auth'),\n    setToken = _require.setToken;\n\nvar generateAlert = function generateAlert(reset, setLoadingRegister, typeAlert, message, _timeout) {\n  reset();\n  setLoadingRegister(false);\n  toast[typeAlert](message, {\n    position: \"top-right\",\n    autoClose: _timeout,\n    pauseOnHover: false\n  });\n};\n\nfunction RegisterForm() {\n  var _timeout = 3000;\n\n  var _useState = useState(false),\n      loadingRegister = _useState[0],\n      setLoadingRegister = _useState[1];\n\n  var _useForm = useForm({\n    mode: 'onBlur'\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(dataForm) {\n      var timeStart, _ref2, data, timeEnd, _timeEnd;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoadingRegister(true);\n              timeStart = new Date().getTime();\n              _context.prev = 2;\n              dataForm.avatar = 'user.png'; // set default user avatar\n\n              _context.next = 6;\n              return axios.post('/api/create/user', dataForm);\n\n            case 6:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n\n              if (!data.error) {\n                _context.next = 10;\n                break;\n              }\n\n              throw new Error(data.error);\n\n            case 10:\n              setToken(data.token);\n              timeEnd = new Date().getTime();\n\n              if (timeEnd - timeStart > _timeout) {\n                generateAlert(reset, setLoadingRegister, 'dark', 'User is registered successfully', _timeout);\n                setTimeout(function () {\n                  location.href = '/';\n                }, _timeout);\n              } else {\n                setTimeout(function () {\n                  generateAlert(reset, setLoadingRegister, 'dark', 'User is registered successfully', _timeout);\n                  setTimeout(function () {\n                    location.href = '/';\n                  }, _timeout);\n                }, _timeout - (timeEnd - timeStart));\n              }\n\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](2);\n              _timeEnd = new Date().getTime();\n\n              if (_timeEnd - timeStart > _timeout) {\n                generateAlert(reset, setLoadingRegister, 'error', _context.t0.message, _timeout);\n              } else {\n                setTimeout(function () {\n                  generateAlert(reset, setLoadingRegister, 'error', _context.t0.message, _timeout);\n                }, _timeout - (_timeEnd - timeStart));\n              }\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 15]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var password = useRef({});\n  password.current = watch(\"password\", \"\");\n  return __jsx(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(UI_ELEMENTS.Input, {\n    type: \"text\",\n    name: \"name\",\n    refBind: register(FULL_NAME_VALIDATOR),\n    errors: errors.name && errors.name.message,\n    fullWidth: true,\n    placeholder: \"Name\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Input, {\n    type: \"email\",\n    name: \"email\",\n    refBind: register(EMAIL_VALIDATOR),\n    errors: errors.email && errors.email.message,\n    fullWidth: true,\n    placeholder: \"Email ID\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Input, {\n    refBind: register(PASSWORD_VALIDATOR),\n    errors: errors.password && errors.password.message || errors.password && errors.password.type === 'containsDigit' && 'Use 1 ore more numbers' || errors.password && errors.password.type === 'containsUppercase' && 'Use upper and lower case characters',\n    name: \"password\",\n    type: \"password\",\n    fullWidth: true,\n    placeholder: \"Password\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Input, {\n    refBind: register({\n      validate: function validate(value) {\n        return value === password.current || \"The passwords do not match\";\n      }\n    }),\n    errors: errors.password_repeat && errors.password_repeat.message,\n    name: \"password_repeat\",\n    type: \"password\",\n    fullWidth: true,\n    placeholder: \"Confirm Password\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Button, {\n    icon: loadingRegister ? {\n      dir: 'right',\n      element: 'loading'\n    } : {},\n    type: \"submit\",\n    text: \"Register\",\n    width: 190,\n    size: \"md\"\n  }), __jsx(Link, {\n    href: \"/login\",\n    prefetch: false\n  }, __jsx(\"a\", {\n    className: \"link-to-reset\"\n  }, \"I have an account already. Go to login\")));\n}\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(Head, null, __jsx(\"title\", null, \"Register\")), __jsx(\"main\", null, __jsx(\"div\", {\n        className: \"register-form-container\"\n      }, __jsx(\"div\", {\n        className: \"form-icon\"\n      }, __jsx(Icon, {\n        name: \"user\"\n      })), __jsx(\"h4\", {\n        className: \"title-form\"\n      }, \"Member Register\"), __jsx(RegisterForm, null))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nRegister.Layout = DumpLayout;\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}