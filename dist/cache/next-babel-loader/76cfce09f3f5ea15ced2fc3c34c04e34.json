{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useEffect, useCallback } from 'react';\nimport classes from './categories.scss';\nimport { Modal, ModalHeader, ModalBody, Tooltip } from 'reactstrap';\nimport Icon from 'components/Icons/icon';\nimport { ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN } from 'utils';\nimport UI_ELEMENTS from 'components/shared/UI';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport axios from 'lib/axiosEnv';\nimport { toast } from 'react-toastify';\nimport { __SET_CATEGORY_LIST } from 'store/actions';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\n\nconst {\n  getToken\n} = require('utils/auth');\n\nimport { Bus } from 'lib/EventEmitter';\n\nconst CRUDCategoryForm = props => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset,\n    setValue\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const {\n    0: loadingCategory,\n    1: setLoadingCategory\n  } = useState(false);\n  const {\n    0: tooltipOpen,\n    1: setTooltipOpen\n  } = useState(false);\n  const {\n    0: typeCRUD,\n    1: setTypeCRUD\n  } = useState('');\n  const {\n    0: subCategoryContent,\n    1: setSubCategoryContent\n  } = useState([]);\n  const {\n    0: categoryContent,\n    1: setCategoryContent\n  } = useState('');\n  const {\n    0: deepCategoryContent,\n    1: setDeepCategoryContent\n  } = useState(null);\n  const toastOpt = {\n    position: 'top-right',\n    autoClose: 3000,\n    pauseOnHover: false\n  };\n\n  const toggle = () => setTooltipOpen(!tooltipOpen); // Generate new ParamName\n\n\n  const generateName = (begin, state) => {\n    if (state.some(s => s.name === 'subCategory' + begin)) {\n      return generateName(begin + 1, state);\n    } else return 'subCategory' + begin;\n  };\n\n  const addSubCategoryField = () => {\n    setSubCategoryContent(prevState => [...prevState, {\n      value: '',\n      name: generateName(0, subCategoryContent)\n    }]);\n  };\n\n  const saveChanges = data => {\n    const fakeCategories = [...subCategoryContent];\n    const index = fakeCategories.findIndex(item => item.name === data.name);\n\n    if (index > -1) {\n      fakeCategories[index].value = data.value;\n    }\n  };\n\n  const removeCategory = useCallback((name, state) => {\n    if (name === 'name') {\n      setCategoryContent('removed');\n      setSubCategoryContent([]);\n      return;\n    }\n\n    const prevState = [...state];\n    const indexRem = prevState.findIndex(obj => obj.name === name);\n\n    if (indexRem > -1) {\n      prevState.splice(indexRem, 1);\n    }\n\n    setSubCategoryContent(prevState);\n  }, [categoryContent, subCategoryContent]);\n  useEffect(() => {\n    if (_Object$keys(props.editCategoryData).length) {\n      // Saving Cloned Data before editing\n      setDeepCategoryContent(JSON.parse(_JSON$stringify(props.editCategoryData)));\n      setValue('name', props.editCategoryData.text);\n      setCategoryContent(props.editCategoryData.text);\n      props.editCategoryData.dataSub.forEach(el => {\n        setSubCategoryContent(prevState => [...prevState, {\n          value: el.text,\n          name: el.id\n        }]);\n      });\n    }\n  }, [props.editCategoryData]);\n  useEffect(() => {\n    setTypeCRUD(props.crudType);\n  }, [props.crudType]);\n  useEffect(() => {\n    subCategoryContent.forEach(e => {\n      if (props.crudType === 'edit') {\n        setValue(e.name, e.value);\n      }\n    });\n  }, [subCategoryContent]);\n\n  const reflect = promise => {\n    return promise.then(function (v) {\n      return {\n        v: v,\n        status: 'fulfilled'\n      };\n    }, function (e) {\n      return {\n        e: e,\n        status: 'rejected'\n      };\n    });\n  };\n\n  const onSubmit = async dataCategory => {\n    try {\n      if (typeCRUD === 'edit') {\n        let editedObj = {};\n        let parentSlug = deepCategoryContent.link.pathname.split('/').pop();\n\n        const getSubCategories = _Object$keys(dataCategory).reduce((acc, sub) => {\n          if (sub !== 'name') {\n            if (!deepCategoryContent.dataSub.find(obj => obj.id === sub)) {\n              acc[sub] = dataCategory[sub];\n            } else {\n              acc[sub] = {\n                name: deepCategoryContent.dataSub.find(obj => obj.id === sub).text,\n                newName: dataCategory[sub],\n                category: deepCategoryContent.text\n              };\n            }\n          }\n\n          return acc;\n        }, {});\n\n        if (!dataCategory.hasOwnProperty('name')) {\n          const {\n            data\n          } = await axios.delete('/api/remove/category', {\n            headers: {\n              Authorization: getToken('token')\n            },\n            data: {\n              name: deepCategoryContent.text\n            }\n          });\n          if (data.error) throw Error(data.error);\n          toast.dark(data.message, toastOpt);\n          props.handlerForm(typeCRUD, {\n            name: deepCategoryContent.text,\n            removed: true\n          });\n          return;\n        }\n\n        const [added, removed, updated] = [[], [], []];\n\n        if (dataCategory.name && dataCategory.name !== deepCategoryContent.text) {\n          updated.push({\n            name: deepCategoryContent.text,\n            text: dataCategory.name\n          });\n        } // Added\n\n\n        _Object$keys(getSubCategories).forEach(obj => {\n          if (obj.indexOf('subCategory') > -1) {\n            added.push({\n              [obj]: getSubCategories[obj]\n            });\n          }\n        }); // Removed\n\n\n        deepCategoryContent.dataSub.forEach(rem => {\n          if (!getSubCategories.hasOwnProperty(rem.id)) {\n            removed.push({\n              name: rem.text,\n              category: deepCategoryContent.text\n            });\n          }\n        }); // Updated\n\n        deepCategoryContent.dataSub.forEach(rem => {\n          if (getSubCategories.hasOwnProperty(rem.id) && getSubCategories[rem.id].newName !== rem.text) {\n            const obj = getSubCategories[rem.id];\n            updated.push({\n              subName: obj.name,\n              text: obj.newName,\n              category: obj.category\n            });\n          }\n        });\n        const [addPromise, updatePromise, removePromise] = [[], [], []];\n\n        for (const add of added) {\n          addPromise.push(new _Promise((resolve, reject) => {\n            axios.post('/api/add/subCategory', {\n              name: _Object$values(add)[0],\n              category: dataCategory.name\n            }, {\n              headers: {\n                Authorization: getToken('token')\n              }\n            }).then(res => resolve(res)).catch(err => reject(err));\n          }));\n        }\n\n        for (const rem of removed) {\n          removePromise.push(new _Promise((resolve, reject) => {\n            axios.delete('/api/delete/subCategory', {\n              headers: {\n                Authorization: getToken('token')\n              },\n              data: {\n                name: rem.name,\n                category: rem.category\n              }\n            }).then(res => resolve(res)).catch(err => reject(err));\n          }));\n        }\n\n        for (const up of updated) {\n          if (up.subName) {\n            // For sub Categories\n            updatePromise.push(new _Promise((resolve, reject) => {\n              axios.put('/api/update/subCategory', {\n                name: up.subName,\n                newName: up.text,\n                category: up.category\n              }, {\n                headers: {\n                  Authorization: getToken('token')\n                }\n              }).then(res => resolve(res)).catch(err => reject(err));\n            }));\n          } else {\n            // For Categories\n            updatePromise.push(new _Promise((resolve, reject) => {\n              axios.put('/api/update/category', {\n                name: up.name,\n                text: up.text\n              }, {\n                headers: {\n                  Authorization: getToken('token')\n                }\n              }).then(res => resolve(res)).catch(err => reject(err));\n            }));\n          }\n        }\n\n        const promiseAllArr = [...updatePromise, ...addPromise, ...removePromise];\n        const results = await _Promise.all(promiseAllArr.map(reflect));\n        const success = results.filter(x => x.status === 'fulfilled');\n\n        if (success.length !== promiseAllArr.length) {\n          toast.error('Some request went wrong!', toastOpt);\n        } else {\n          toast.dark('Requests was gone successfully!', toastOpt);\n          const updatedCategory = success.filter(x => x.v.data.updatedCategory);\n          const updatedSubCategory = success.filter(x => x.v.data.updatedSubCategory);\n          const addedSubCategory = success.filter(x => x.v.data.subCategory);\n          const removedSubCategory = success.filter(x => x.v.data.removedSubCategory);\n          editedObj.dataSub = deepCategoryContent.dataSub;\n          editedObj.data = {\n            name: deepCategoryContent.text,\n            edited: true\n          };\n\n          if (updatedCategory.length) {\n            editedObj.data.newName = updatedCategory[0].v.data.updatedCategory.name;\n            parentSlug = editedObj.data.newSlug = updatedCategory[0].v.data.updatedCategory.slug;\n            editedObj.dataSub.forEach(el => {\n              const linkSub = el.link.pathname.split('/').pop();\n              el.link.pathname = '/shop/' + parentSlug + '/' + linkSub;\n            });\n          }\n\n          if (updatedSubCategory.length) {\n            updatedSubCategory.forEach(el => {\n              const findOldSub = editedObj.dataSub.findIndex(i => i.text === el.v.data.updatedSubCategory.oldName);\n\n              if (findOldSub > -1) {\n                editedObj.dataSub[findOldSub].text = el.v.data.updatedSubCategory.name;\n                editedObj.dataSub[findOldSub].link.pathname = '/shop/' + parentSlug + '/' + el.v.data.updatedSubCategory.slug;\n              }\n            });\n          }\n\n          if (removedSubCategory.length) {\n            removedSubCategory.forEach(el => {\n              const findRemSub = editedObj.dataSub.findIndex(i => i.text === el.v.data.removedSubCategory.name);\n\n              if (findRemSub > -1) {\n                editedObj.dataSub.splice(findRemSub, 1);\n              }\n            });\n          }\n\n          if (addedSubCategory.length) {\n            addedSubCategory.forEach(el => {\n              const added = el.v.data.subCategory;\n\n              if (added) {\n                editedObj.dataSub.push({\n                  id: added._id,\n                  text: added.name,\n                  link: {\n                    pathname: '/shop/' + parentSlug + '/' + added.slug\n                  }\n                });\n              }\n            });\n          }\n\n          props.handlerForm(typeCRUD, editedObj.data, editedObj.dataSub);\n        }\n      } else {\n        const getSubCategories = _Object$keys(dataCategory).reduce((acc, sub) => {\n          if (sub !== 'name') acc[sub] = dataCategory[sub];\n          return acc;\n        }, {}); // Remove all Sub category fields before creating\n\n\n        if (_Object$keys(getSubCategories).length) {\n          _Object$keys(getSubCategories).forEach(remSub => delete dataCategory[remSub]);\n        }\n\n        const {\n          data\n        } = await axios.post('/api/add/category', dataCategory, {\n          headers: {\n            Authorization: getToken('token')\n          }\n        });\n\n        if (data.error) {\n          throw Error(data.error.message || data.error);\n        } // If there are SubCategories\n\n\n        const promisesSub = [];\n        const subData = [];\n        let subCategoriesFail = false;\n        await (() => {\n          if (_Object$keys(getSubCategories).length) {\n            for (let i = 0, p = _Promise.resolve(); i < _Object$keys(getSubCategories).length; i++) {\n              p = p.then(_ => new _Promise(async resolve => {\n                const dataSub = await axios.post('/api/add/subCategory', {\n                  name: getSubCategories[_Object$keys(getSubCategories)[i]],\n                  category: data.category.name\n                }, {\n                  headers: {\n                    Authorization: getToken('token')\n                  }\n                });\n                if (dataSub.data.error) subCategoriesFail = true;else {\n                  subData.push(dataSub.data.subCategory);\n                }\n                resolve();\n              }));\n              promisesSub.push(p);\n            }\n          }\n\n          return _Promise.all(promisesSub);\n        })();\n\n        if (subCategoriesFail) {\n          throw Error('Something went wrong with Sub Categories!');\n        } else {\n          toast.dark(data.message, toastOpt);\n          props.handlerForm(typeCRUD, data, subData);\n        }\n      }\n    } catch (err) {\n      toast.error(err.response ? err.response.data : err.message, toastOpt);\n    } finally {\n      props.closeModal();\n      reset();\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    id: \"category-form\",\n    onSubmit: handleSubmit(onSubmit)\n  }, categoryContent !== 'removed' ? __jsx(\"div\", {\n    className: classes['parentUI-input']\n  }, __jsx(UI_ELEMENTS.Input, {\n    type: \"text\",\n    name: \"name\",\n    refBind: categoryContent ? React.createRef() : register(ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN),\n    errors: errors.name && errors.name.message,\n    fullWidth: true,\n    placeholder: \"Name\",\n    size: \"sm\"\n  }), __jsx(\"span\", {\n    className: classes['remove-icon'],\n    onClick: () => removeCategory('name', categoryContent)\n  }, __jsx(Icon, {\n    name: \"close\"\n  }))) : '', subCategoryContent.length ? __jsx(\"div\", {\n    className: classes.subCategoryContent\n  }, \" \", subCategoryContent.map((_, index) => __jsx(\"div\", {\n    key: _.category + _.name,\n    className: classes['parentUI-input']\n  }, __jsx(UI_ELEMENTS.Input, {\n    type: \"text\",\n    events: ['change'],\n    onChange: e => saveChanges({\n      value: e.target.value,\n      name: _.name\n    }),\n    name: _.name,\n    refBind: register(ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN),\n    errors: errors[_.name] && errors[_.name].message,\n    fullWidth: true,\n    placeholder: \"Sub category name\",\n    size: \"sm\"\n  }), __jsx(\"span\", {\n    className: classes['remove-icon'],\n    onClick: () => removeCategory(_.name, subCategoryContent)\n  }, __jsx(Icon, {\n    name: \"close\"\n  }))))) : '', __jsx(\"div\", {\n    className: classes.addCategory\n  }, __jsx(UI_ELEMENTS.Button, {\n    icon: loadingCategory ? {\n      dir: 'right',\n      element: 'loading'\n    } : {},\n    type: \"submit\",\n    text: \"Save\",\n    width: 100,\n    margin: ['0px', '0', '0', 'auto'],\n    attr: [{\n      id: 'saveBtn'\n    }],\n    size: \"sm\"\n  }), categoryContent !== 'removed' ? __jsx(\"a\", {\n    id: \"add-category-sub\",\n    onClick: addSubCategoryField\n  }, \"+\") : ''), __jsx(Tooltip, {\n    placement: \"right\",\n    isOpen: tooltipOpen,\n    target: \"add-category-sub\",\n    toggle: toggle\n  }, \"Add Sub Category\")));\n};\n\nCRUDCategoryForm.propTypes = {\n  crudType: PropTypes.string,\n  editCategoryData: PropTypes.object,\n  handlerForm: PropTypes.func,\n  closeModal: PropTypes.func\n};\n\nconst Li = function (props) {\n  const {\n    data,\n    parent\n  } = props;\n  let {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  let {\n    0: height,\n    1: setHeight\n  } = useState(0);\n\n  const openSubMenu = (evt, index) => {\n    setHeight(height = 0);\n    evt.stopPropagation();\n    evt.preventDefault();\n    setOpen(open = parent.current.children[index] && parent.current.children[index].classList.contains('openItemDropdown'));\n    parent.current.children[index].classList[!open ? 'add' : 'remove']('openItemDropdown');\n    !open ? parent.current.children[index].querySelectorAll('.' + classes['submenu_dropdown'] + ' > li').forEach(_ => setHeight(height += _.getBoundingClientRect().height)) : setHeight(height = 0);\n    parent.current.children[index].querySelector('.' + classes['submenu_dropdown']).style.maxHeight = height + 'px';\n  };\n\n  const goToShop = path => {\n    _Object$keys(Router.query).forEach(qu => {\n      // Remove unnecessary query params\n      if (qu !== 'name' && qu !== 'category' && qu !== 'subCategory' && qu !== 'page' && qu !== 'maxPrice' && qu !== 'minPrice') delete Router.query[qu];\n    });\n\n    const query = _objectSpread({}, Router.query);\n\n    if (path.hasOwnProperty('querySubCategory')) {\n      query.category = path.queryCategory;\n      query.subCategory = path.querySubCategory;\n    } else if (path.hasOwnProperty('queryCategory')) {\n      query.category = path.queryCategory;\n      delete query.subCategory;\n    }\n\n    query.page = 1;\n    Router.push({\n      pathname: '/shop',\n      query: _objectSpread({}, query)\n    }).then(() => Bus.dispatch('filterByCategory'));\n  };\n\n  const openModal = (el, index) => {\n    setHeight(0);\n    setOpen(true);\n    parent.current.children[index].classList.remove('openItemDropdown');\n\n    if (!open && parent.current.children[index].querySelector('.' + classes['submenu_dropdown'])) {\n      parent.current.children[index].querySelector('.' + classes['submenu_dropdown']).style.maxHeight = '0px';\n    }\n\n    props.openPropModal(el);\n  };\n\n  if (data instanceof Object) {\n    const _li = _Object$keys(data).map((_el, index) => {\n      const display = data[_el].link.pathname ? __jsx(\"a\", {\n        onClick: () => goToShop(data[_el])\n      }, data[_el].text, \" \", data[_el].hasOwnProperty('dataSub') && _Object$keys(data[_el].dataSub).length > 0 ? __jsx(\"span\", {\n        className: classes['dropdown_arrow'],\n        onClick: e => openSubMenu(e, index)\n      }) : '') : __jsx(\"span\", null, data[_el].text);\n      let subMenu;\n\n      if (data[_el].hasOwnProperty('dataSub') && _Object$keys(data[_el].dataSub).length > 0) {\n        subMenu = __jsx(Li, {\n          data: data[_el].dataSub,\n          isAdmin: props.isAdmin\n        });\n      }\n\n      return __jsx(\"li\", {\n        key: index,\n        className: props.isAdmin ? 'admin-icon-relative' : ''\n      }, display, props.isAdmin && __jsx(\"span\", {\n        className: \"admin-icon\",\n        onClick: () => openModal(data[_el], index)\n      }, __jsx(Icon, {\n        name: \"pencil\"\n      })), subMenu ? __jsx(\"ul\", {\n        className: classes['submenu_dropdown']\n      }, subMenu) : '');\n    });\n\n    return __jsx(Fragment, null, _li);\n  }\n};\n\nLi.propTypes = {\n  openPropModal: PropTypes.func,\n  parent: PropTypes.object,\n  isAdmin: PropTypes.bool\n};\n\nclass Categories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      try {\n        const {\n          data\n        } = await axios.get('/api/get/categories');\n        if (data.error) throw Error(data.error);\n        this.setState({\n          categoryList: (() => {\n            const list = {};\n\n            for (let i = 0; i < data.category.length; i++) {\n              list[data.category[i].name] = {\n                text: data.category[i].name,\n                queryCategory: data.category[i].slug,\n                link: {\n                  pathname: '/shop?category=' + data.category[i].slug + this.routerQueries(['category'])\n                },\n                dataSub: data.subCategory.reduce((acc, sub) => {\n                  if (sub.category === data.category[i].name) {\n                    acc.push({\n                      queryCategory: data.category[i].slug,\n                      querySubCategory: sub.slug,\n                      text: sub.name,\n                      id: sub._id,\n                      link: {\n                        pathname: '/shop?category=' + data.category[i].slug + '&subCategory=' + sub.slug + this.routerQueries(['category', 'subCategory'])\n                      }\n                    });\n                  }\n\n                  return acc;\n                }, [])\n              };\n            }\n\n            return list;\n          })()\n        }, () => {\n          this.props.__SET_CATEGORY_LIST(this.state.categoryList);\n        });\n      } catch (err) {\n        toast.error(err.response ? err.response.data : err.message, {\n          position: 'top-right',\n          autoClose: 3000,\n          pauseOnHover: false\n        });\n      }\n    });\n\n    this.state = {\n      modal: false,\n      crudType: '',\n      categoryList: {},\n      editCategoryData: {}\n    };\n    this.openModal = this.openModal.bind(this);\n    this.routerQueries = this.routerQueries.bind(this);\n    this.handlerChangesCRUD = this.handlerChangesCRUD.bind(this);\n    this.categoryRef = React.createRef();\n  }\n\n  routerQueries(besides) {\n    let queries = '';\n\n    _Object$keys(Router.query).forEach(query => {\n      if (besides.indexOf(query) === -1) {\n        queries += '&' + query + '=' + Router.query[query];\n      }\n    });\n\n    return queries;\n  }\n\n  openModal(type = 'add', dataEdit = {}) {\n    this.setState({\n      editCategoryData: dataEdit,\n      crudType: typeof type === 'string' ? type : '',\n      modal: !this.state.modal\n    });\n  }\n\n  handlerChangesCRUD(type, data, subData = []) {\n    if (type === 'edit' && data.edited) {\n      const nameCategory = data.newName || data.name;\n      let prevStateCategory = this.state.categoryList;\n\n      if (data.newName) {\n        const nameCategorySlug = (() => {\n          const arr = prevStateCategory[data.name].link.pathname.split('/');\n          arr.pop();\n          arr.push(data.newSlug);\n          return arr.join('/');\n        })();\n\n        prevStateCategory[data.newName] = prevStateCategory[data.name];\n        delete prevStateCategory[data.name];\n        prevStateCategory[data.newName].text = nameCategory;\n        prevStateCategory[data.newName].link.pathname = nameCategorySlug;\n      }\n\n      const updatedCategoryList = JSON.parse(_JSON$stringify(prevStateCategory[nameCategory]));\n      updatedCategoryList.dataSub = subData;\n      prevStateCategory[nameCategory] = updatedCategoryList;\n      const orderedPrevStateCategory = {};\n\n      _Object$keys(prevStateCategory).sort().forEach(function (key) {\n        orderedPrevStateCategory[key] = prevStateCategory[key];\n      });\n\n      this.setState({\n        categoryList: _objectSpread({}, orderedPrevStateCategory)\n      });\n    } else if (type === 'edit' && data.removed) {\n      Object.filter = (obj, predicate) => Object.fromEntries(_Object$entries(obj).filter(predicate));\n\n      const removedCategory = Object.filter(this.state.categoryList, ([name, list]) => list.text !== data.name);\n      this.setState({\n        categoryList: removedCategory\n      });\n    } else {\n      this.setState(prevState => ({\n        categoryList: _objectSpread({}, prevState.categoryList, {\n          [data.category.name]: {\n            text: data.category.name,\n            link: {\n              pathname: '/shop/' + data.category.slug\n            },\n            dataSub: subData.map(sub => {\n              return {\n                id: sub._id,\n                text: sub.name,\n                link: {\n                  pathname: '/shop/' + data.category.slug + '/' + sub.slug\n                }\n              };\n            })\n          }\n        })\n      }));\n    }\n  }\n\n  isAdmin() {\n    return this.props.isAdmin && this.props.isAdmin.roleType === 'admin';\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: classes['categories-container']\n    }, __jsx(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.openModal\n    }, __jsx(ModalHeader, {\n      toggle: this.openModal\n    }, \"Add Category\"), __jsx(ModalBody, null, __jsx(CRUDCategoryForm, {\n      closeModal: this.openModal,\n      handlerForm: this.handlerChangesCRUD,\n      crudType: this.state.crudType,\n      editCategoryData: this.state.editCategoryData\n    }))), __jsx(\"div\", {\n      className: `${classes['categories-container-header']} ${this.isAdmin() ? 'admin-icon-relative' : ''}`\n    }, __jsx(\"h4\", null, \"Categories\"), this.isAdmin() && __jsx(\"span\", {\n      className: \"admin-icon\",\n      onClick: () => this.openModal('add')\n    }, __jsx(Icon, {\n      name: \"plus\"\n    }))), __jsx(\"div\", {\n      className: classes['categories-container-body']\n    }, __jsx(\"ul\", {\n      type: \"none\",\n      ref: this.categoryRef\n    }, __jsx(Li, {\n      data: this.state.categoryList,\n      parent: this.categoryRef,\n      isAdmin: this.isAdmin(),\n      openPropModal: data => this.openModal('edit', data)\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAdmin: state.auth.user\n});\n\nconst mapDispatchToProps = {\n  __SET_CATEGORY_LIST\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/OVENO/components/Home/Categories/categories.jsx"],"names":["React","Fragment","useState","useEffect","useCallback","classes","Modal","ModalHeader","ModalBody","Tooltip","Icon","ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN","UI_ELEMENTS","useForm","PropTypes","axios","toast","__SET_CATEGORY_LIST","connect","Router","getToken","require","Bus","CRUDCategoryForm","props","register","handleSubmit","errors","reset","setValue","mode","loadingCategory","setLoadingCategory","tooltipOpen","setTooltipOpen","typeCRUD","setTypeCRUD","subCategoryContent","setSubCategoryContent","categoryContent","setCategoryContent","deepCategoryContent","setDeepCategoryContent","toastOpt","position","autoClose","pauseOnHover","toggle","generateName","begin","state","some","s","name","addSubCategoryField","prevState","value","saveChanges","data","fakeCategories","index","findIndex","item","removeCategory","indexRem","obj","splice","editCategoryData","length","JSON","parse","text","dataSub","forEach","el","id","crudType","e","reflect","promise","then","v","status","onSubmit","dataCategory","editedObj","parentSlug","link","pathname","split","pop","getSubCategories","reduce","acc","sub","find","newName","category","hasOwnProperty","delete","headers","Authorization","error","Error","dark","message","handlerForm","removed","added","updated","push","indexOf","rem","subName","addPromise","updatePromise","removePromise","add","resolve","reject","post","res","catch","err","up","put","promiseAllArr","results","all","map","success","filter","x","updatedCategory","updatedSubCategory","addedSubCategory","subCategory","removedSubCategory","edited","newSlug","slug","linkSub","findOldSub","i","oldName","findRemSub","_id","remSub","promisesSub","subData","subCategoriesFail","p","_","response","closeModal","createRef","target","addCategory","dir","element","propTypes","string","object","func","Li","parent","open","setOpen","height","setHeight","openSubMenu","evt","stopPropagation","preventDefault","current","children","classList","contains","querySelectorAll","getBoundingClientRect","querySelector","style","maxHeight","goToShop","path","query","qu","queryCategory","querySubCategory","page","dispatch","openModal","remove","openPropModal","Object","_li","_el","display","subMenu","isAdmin","bool","Categories","Component","constructor","get","setState","categoryList","list","routerQueries","modal","bind","handlerChangesCRUD","categoryRef","besides","queries","type","dataEdit","nameCategory","prevStateCategory","nameCategorySlug","arr","join","updatedCategoryList","orderedPrevStateCategory","sort","key","predicate","fromEntries","removedCategory","roleType","render","mapStateToProps","auth","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useCallback } from 'react';\r\nimport classes from './categories.scss';\r\nimport {\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Tooltip\r\n} from 'reactstrap';\r\nimport Icon from 'components/Icons/icon';\r\nimport {\r\n    ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN\r\n} from 'utils';\r\nimport UI_ELEMENTS from 'components/shared/UI';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'lib/axiosEnv';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    __SET_CATEGORY_LIST,\r\n} from 'store/actions';\r\nimport { connect } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nconst {\r\n    getToken\r\n} = require('utils/auth');\r\nimport { Bus } from 'lib/EventEmitter';\r\n\r\nconst CRUDCategoryForm = (props) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        errors,\r\n        reset,\r\n        setValue\r\n    } = useForm({\r\n        mode: 'onBlur',\r\n    });\r\n\r\n    const [loadingCategory, setLoadingCategory] = useState(false);\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n    const [typeCRUD, setTypeCRUD] = useState('');\r\n    const [subCategoryContent, setSubCategoryContent] = useState([]);\r\n    const [categoryContent, setCategoryContent] = useState('');\r\n    const [deepCategoryContent, setDeepCategoryContent] = useState(null);\r\n\r\n    const toastOpt = {\r\n        position: 'top-right',\r\n        autoClose: 3000,\r\n        pauseOnHover: false,\r\n    };\r\n\r\n    const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n    // Generate new ParamName\r\n    const generateName = (begin, state) => {\r\n        if (state.some(s => s.name === 'subCategory' + begin)) {\r\n            return generateName(begin + 1, state);\r\n        } else return 'subCategory' + begin\r\n    };\r\n\r\n\r\n    const addSubCategoryField = () => {\r\n        setSubCategoryContent(prevState => [...prevState, { value: '', name: generateName(0, subCategoryContent) }])\r\n    };\r\n\r\n    const saveChanges = (data) => {\r\n        const fakeCategories = [...subCategoryContent];\r\n        const index = fakeCategories.findIndex(item => item.name === data.name);\r\n        if (index > -1) {\r\n            fakeCategories[index].value = data.value;\r\n        }\r\n    };\r\n\r\n    const removeCategory = useCallback((name, state) => {\r\n        if (name === 'name') {\r\n            setCategoryContent('removed');\r\n            setSubCategoryContent([]);\r\n            return\r\n        }\r\n        const prevState = [...state];\r\n        const indexRem = prevState.findIndex(obj => (obj.name === name));\r\n        if (indexRem > -1) {\r\n            prevState.splice(indexRem, 1);\r\n        }\r\n        setSubCategoryContent(prevState);\r\n    }, [categoryContent, subCategoryContent]);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(props.editCategoryData).length) {\r\n            // Saving Cloned Data before editing\r\n            setDeepCategoryContent(JSON.parse(JSON.stringify(props.editCategoryData)));\r\n\r\n            setValue('name', props.editCategoryData.text);\r\n            setCategoryContent(props.editCategoryData.text);\r\n            props.editCategoryData.dataSub.forEach(el => {\r\n                setSubCategoryContent(prevState => [...prevState, { value: el.text, name: el.id }])\r\n            });\r\n        }\r\n    }, [props.editCategoryData]);\r\n\r\n\r\n    useEffect(() => {\r\n        setTypeCRUD(props.crudType);\r\n    }, [props.crudType]);\r\n\r\n    useEffect(() => {\r\n        subCategoryContent.forEach(e => {\r\n            if (props.crudType === 'edit') {\r\n                setValue(e.name, e.value);\r\n            }\r\n        })\r\n    }, [subCategoryContent]);\r\n\r\n\r\n    const reflect = (promise) => {\r\n        return promise.then(function (v) {\r\n                return { v: v, status: 'fulfilled' }\r\n            },\r\n            function (e) {\r\n                return { e: e, status: 'rejected' }\r\n            });\r\n    };\r\n\r\n    const onSubmit = async dataCategory => {\r\n        try {\r\n            if (typeCRUD === 'edit') {\r\n                let editedObj = {};\r\n                let parentSlug = deepCategoryContent.link.pathname.split('/').pop();\r\n                const getSubCategories = Object.keys(dataCategory).reduce((acc, sub) => {\r\n                    if (sub !== 'name') {\r\n                        if (!deepCategoryContent.dataSub.find(obj => obj.id === sub)) {\r\n                            acc[sub] = dataCategory[sub];\r\n                        } else {\r\n                            acc[sub] = {\r\n                                name: deepCategoryContent.dataSub.find(obj => obj.id === sub).text,\r\n                                newName: dataCategory[sub],\r\n                                category: deepCategoryContent.text\r\n                            };\r\n                        }\r\n                    }\r\n                    return acc\r\n                }, {});\r\n                if (!dataCategory.hasOwnProperty('name')) {\r\n                    const { data } = await axios.delete('/api/remove/category', {\r\n                        headers: { Authorization: getToken('token') },\r\n                        data: {\r\n                            name: deepCategoryContent.text\r\n                        }\r\n                    });\r\n                    if (data.error) throw Error(data.error);\r\n                    toast.dark(data.message, toastOpt);\r\n                    props.handlerForm(typeCRUD, { name: deepCategoryContent.text, removed: true });\r\n                    return\r\n                }\r\n\r\n                const [added, removed, updated] = [[], [], []];\r\n\r\n                if (dataCategory.name && dataCategory.name !== deepCategoryContent.text) {\r\n                    updated.push({ name: deepCategoryContent.text, text: dataCategory.name })\r\n                }\r\n\r\n                // Added\r\n                Object.keys(getSubCategories).forEach(obj => {\r\n                    if (obj.indexOf('subCategory') > -1) {\r\n                        added.push({ [obj]: getSubCategories[obj] })\r\n                    }\r\n                });\r\n                // Removed\r\n                deepCategoryContent.dataSub.forEach(rem => {\r\n                    if (!getSubCategories.hasOwnProperty(rem.id)) {\r\n                        removed.push({ name: rem.text, category: deepCategoryContent.text })\r\n                    }\r\n                });\r\n                // Updated\r\n                deepCategoryContent.dataSub.forEach(rem => {\r\n                    if (getSubCategories.hasOwnProperty(rem.id) && getSubCategories[rem.id].newName !== rem.text) {\r\n                        const obj = getSubCategories[rem.id];\r\n                        updated.push({ subName: obj.name, text: obj.newName, category: obj.category })\r\n                    }\r\n                });\r\n\r\n                const [addPromise, updatePromise, removePromise] = [[], [], []];\r\n                for (const add of added) {\r\n                    addPromise.push(\r\n                        new Promise((resolve, reject) => {\r\n                            axios.post('/api/add/subCategory', {\r\n                                name: Object.values(add)[0],\r\n                                category: dataCategory.name\r\n                            }, {\r\n                                headers: { Authorization: getToken('token') },\r\n                            }).then(res => resolve(res)).catch(err => reject(err))\r\n                        })\r\n                    )\r\n                }\r\n\r\n                for (const rem of removed) {\r\n                    removePromise.push(\r\n                        new Promise((resolve, reject) => {\r\n                            axios.delete('/api/delete/subCategory', {\r\n                                headers: { Authorization: getToken('token') },\r\n                                data: {\r\n                                    name: rem.name,\r\n                                    category: rem.category\r\n                                }\r\n                            }).then(res => resolve(res)).catch(err => reject(err))\r\n                        })\r\n                    )\r\n                }\r\n\r\n                for (const up of updated) {\r\n                    if (up.subName) { // For sub Categories\r\n                        updatePromise.push(\r\n                            new Promise((resolve, reject) => {\r\n                                axios.put('/api/update/subCategory', {\r\n                                    name: up.subName,\r\n                                    newName: up.text,\r\n                                    category: up.category,\r\n                                }, {\r\n                                    headers: { Authorization: getToken('token') }\r\n                                }).then(res => resolve(res)).catch(err => reject(err))\r\n                            })\r\n                        )\r\n                    } else { // For Categories\r\n                        updatePromise.push(\r\n                            new Promise((resolve, reject) => {\r\n                                axios.put('/api/update/category', {\r\n                                    name: up.name,\r\n                                    text: up.text\r\n                                }, {\r\n                                    headers: { Authorization: getToken('token') }\r\n                                }).then(res => resolve(res)).catch(err => reject(err))\r\n                            })\r\n                        )\r\n                    }\r\n                }\r\n\r\n                const promiseAllArr = [...updatePromise, ...addPromise, ...removePromise];\r\n                const results = await Promise.all(promiseAllArr.map(reflect));\r\n                const success = results.filter(x => x.status === 'fulfilled');\r\n                if (success.length !== promiseAllArr.length) {\r\n                    toast.error('Some request went wrong!', toastOpt);\r\n                } else {\r\n                    toast.dark('Requests was gone successfully!', toastOpt);\r\n                    const updatedCategory = success.filter(x => x.v.data.updatedCategory);\r\n                    const updatedSubCategory = success.filter(x => x.v.data.updatedSubCategory);\r\n                    const addedSubCategory = success.filter(x => x.v.data.subCategory);\r\n                    const removedSubCategory = success.filter(x => x.v.data.removedSubCategory);\r\n                    editedObj.dataSub = deepCategoryContent.dataSub;\r\n                    editedObj.data = {\r\n                        name: deepCategoryContent.text,\r\n                        edited: true,\r\n                    };\r\n\r\n                    if (updatedCategory.length) {\r\n                        editedObj.data.newName = updatedCategory[0].v.data.updatedCategory.name;\r\n                        parentSlug = editedObj.data.newSlug = updatedCategory[0].v.data.updatedCategory.slug;\r\n                        editedObj.dataSub.forEach(el => {\r\n                            const linkSub = el.link.pathname.split('/').pop();\r\n                            el.link.pathname = '/shop/' + parentSlug + '/' + linkSub\r\n                        });\r\n                    }\r\n                    if (updatedSubCategory.length) {\r\n                        updatedSubCategory.forEach(el => {\r\n                            const findOldSub = editedObj.dataSub.findIndex(i => i.text === el.v.data.updatedSubCategory.oldName);\r\n                            if (findOldSub > -1) {\r\n                                editedObj.dataSub[findOldSub].text = el.v.data.updatedSubCategory.name;\r\n                                editedObj.dataSub[findOldSub].link.pathname = '/shop/' + parentSlug + '/' + el.v.data.updatedSubCategory.slug;\r\n                            }\r\n                        })\r\n                    }\r\n                    if (removedSubCategory.length) {\r\n                        removedSubCategory.forEach(el => {\r\n                            const findRemSub = editedObj.dataSub.findIndex(i => i.text === el.v.data.removedSubCategory.name);\r\n                            if (findRemSub > -1) {\r\n                                editedObj.dataSub.splice(findRemSub, 1);\r\n                            }\r\n                        })\r\n                    }\r\n                    if (addedSubCategory.length) {\r\n                        addedSubCategory.forEach(el => {\r\n                            const added = el.v.data.subCategory;\r\n                            if (added) {\r\n                                editedObj.dataSub.push({\r\n                                    id: added._id,\r\n                                    text: added.name,\r\n                                    link: { pathname: '/shop/' + parentSlug + '/' + added.slug }\r\n                                });\r\n                            }\r\n                        })\r\n                    }\r\n                    props.handlerForm(typeCRUD, editedObj.data, editedObj.dataSub);\r\n                }\r\n\r\n            } else {\r\n                const getSubCategories = Object.keys(dataCategory).reduce((acc, sub) => {\r\n                    if (sub !== 'name') acc[sub] = dataCategory[sub];\r\n                    return acc\r\n                }, {});\r\n\r\n                // Remove all Sub category fields before creating\r\n                if (Object.keys(getSubCategories).length) {\r\n                    Object.keys(getSubCategories).forEach(remSub => delete dataCategory[remSub])\r\n                }\r\n\r\n                const { data } = await axios.post('/api/add/category', dataCategory, {\r\n                    headers: { Authorization: getToken('token') }\r\n                });\r\n                if (data.error) {\r\n                    throw Error(data.error.message || data.error)\r\n                }\r\n\r\n                // If there are SubCategories\r\n                const promisesSub = [];\r\n                const subData = [];\r\n                let subCategoriesFail = false;\r\n                await (() => {\r\n                    if (Object.keys(getSubCategories).length) {\r\n                        for (let i = 0, p = Promise.resolve(); i < Object.keys(getSubCategories).length; i++) {\r\n                            p = p.then(_ => new Promise(async resolve => {\r\n                                    const dataSub = await axios.post('/api/add/subCategory', {\r\n                                        name: getSubCategories[Object.keys(getSubCategories)[i]],\r\n                                        category: data.category.name\r\n                                    }, {\r\n                                        headers: { Authorization: getToken('token') }\r\n                                    });\r\n                                    if (dataSub.data.error) subCategoriesFail = true;\r\n                                    else {\r\n                                        subData.push(dataSub.data.subCategory);\r\n                                    }\r\n                                    resolve();\r\n                                }\r\n                            ));\r\n                            promisesSub.push(p);\r\n                        }\r\n                    }\r\n                    return Promise.all(promisesSub);\r\n                })();\r\n\r\n                if (subCategoriesFail) {\r\n                    throw Error('Something went wrong with Sub Categories!');\r\n                } else {\r\n                    toast.dark(data.message, toastOpt);\r\n                    props.handlerForm(typeCRUD, data, subData);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            toast.error(err.response ? err.response.data : err.message, toastOpt);\r\n        } finally {\r\n            props.closeModal();\r\n            reset()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form id=\"category-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                {categoryContent !== 'removed' ? <div className={classes['parentUI-input']}>\r\n                    <UI_ELEMENTS.Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        refBind={categoryContent ? React.createRef() : register(ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN)}\r\n                        errors={errors.name && errors.name.message}\r\n                        fullWidth={true}\r\n                        placeholder=\"Name\"\r\n                        size=\"sm\"/>\r\n                    <span className={classes['remove-icon']} onClick={() => removeCategory('name', categoryContent)}>\r\n                        <Icon name=\"close\"/>\r\n                    </span>\r\n                </div> : ''}\r\n                {subCategoryContent.length ?\r\n                    <div className={classes.subCategoryContent}> {subCategoryContent.map((_, index) => (\r\n                        <div key={_.category + _.name} className={classes['parentUI-input']}>\r\n                            <UI_ELEMENTS.Input\r\n                                type=\"text\"\r\n                                events={['change']}\r\n                                onChange={(e) => saveChanges({ value: e.target.value, name: _.name })}\r\n                                name={_.name}\r\n                                refBind={register(ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN)}\r\n                                errors={errors[_.name] && errors[_.name].message}\r\n                                fullWidth={true}\r\n                                placeholder=\"Sub category name\"\r\n                                size=\"sm\"/>\r\n                            <span className={classes['remove-icon']}\r\n                                  onClick={() => removeCategory(_.name, subCategoryContent)}>\r\n                                <Icon name=\"close\"/>\r\n                            </span>\r\n                        </div>\r\n                    ))}</div> : ''}\r\n                <div className={classes.addCategory}>\r\n                    <UI_ELEMENTS.Button\r\n                        icon={loadingCategory ? { dir: 'right', element: 'loading' } : {}}\r\n                        type=\"submit\"\r\n                        text=\"Save\"\r\n                        width={100}\r\n                        margin={['0px', '0', '0', 'auto']}\r\n                        attr={[\r\n                            { id: 'saveBtn' }\r\n                        ]}\r\n                        size=\"sm\"/>\r\n                    {categoryContent !== 'removed' ?\r\n                        <a id=\"add-category-sub\" onClick={addSubCategoryField}>+</a> : ''}\r\n                </div>\r\n                <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"add-category-sub\" toggle={toggle}>\r\n                    Add Sub Category\r\n                </Tooltip>\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\nCRUDCategoryForm.propTypes = {\r\n    crudType: PropTypes.string,\r\n    editCategoryData: PropTypes.object,\r\n    handlerForm: PropTypes.func,\r\n    closeModal: PropTypes.func,\r\n};\r\n\r\nconst Li = function (props) {\r\n    const { data, parent } = props;\r\n    let [open, setOpen] = useState(false);\r\n    let [height, setHeight] = useState(0);\r\n    const openSubMenu = (evt, index) => {\r\n        setHeight(height = 0);\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n        setOpen(open = parent.current.children[index] && parent.current.children[index].classList.contains('openItemDropdown'));\r\n        parent.current.children[index].classList[!open ? 'add' : 'remove']('openItemDropdown');\r\n        !open ?\r\n            parent.current.children[index].querySelectorAll('.' + classes['submenu_dropdown'] + ' > li').forEach(_ => setHeight(height += _.getBoundingClientRect().height))\r\n            : setHeight(height = 0);\r\n        parent.current.children[index].querySelector('.' + classes['submenu_dropdown']).style.maxHeight = height + 'px'\r\n    };\r\n    const goToShop = (path) => {\r\n        Object.keys(Router.query).forEach(qu => { // Remove unnecessary query params\r\n            if (qu !== 'name' && qu !== 'category' && qu !== 'subCategory' && qu !== 'page' && qu !== 'maxPrice' && qu !== 'minPrice') delete Router.query[qu]\r\n        });\r\n\r\n        const query = { ...Router.query };\r\n        if (path.hasOwnProperty('querySubCategory')) {\r\n            query.category = path.queryCategory;\r\n            query.subCategory = path.querySubCategory\r\n        } else if (path.hasOwnProperty('queryCategory')) {\r\n            query.category = path.queryCategory;\r\n            delete query.subCategory;\r\n        }\r\n        query.page = 1;\r\n        Router.push({\r\n            pathname: '/shop',\r\n            query: { ...query }\r\n        }).then(() => Bus.dispatch('filterByCategory'))\r\n    };\r\n    const openModal = (el, index) => {\r\n        setHeight(0);\r\n        setOpen(true);\r\n        parent.current.children[index].classList.remove('openItemDropdown');\r\n        if (!open && parent.current.children[index].querySelector('.' + classes['submenu_dropdown'])) {\r\n            parent.current.children[index].querySelector('.' + classes['submenu_dropdown']).style.maxHeight = '0px';\r\n        }\r\n        props.openPropModal(el)\r\n    };\r\n\r\n    if (data instanceof Object) {\r\n        const _li = Object.keys(data).map((_el, index) => {\r\n            const display = (data[_el].link.pathname\r\n                    ?\r\n                    <a onClick={() => goToShop(data[_el])}>{data[_el].text} {(data[_el].hasOwnProperty('dataSub') && Object.keys(data[_el].dataSub).length > 0) ?\r\n                        <span className={classes['dropdown_arrow']}\r\n                              onClick={e => openSubMenu(e, index)}></span> : ''}</a>\r\n                    : <span>{data[_el].text}</span>\r\n            );\r\n            let subMenu;\r\n            if (data[_el].hasOwnProperty('dataSub') && Object.keys(data[_el].dataSub).length > 0) {\r\n                subMenu = <Li data={data[_el].dataSub} isAdmin={props.isAdmin}/>\r\n            }\r\n            return (\r\n                <li key={index} className={props.isAdmin ? 'admin-icon-relative' : ''}>\r\n                    {display}\r\n                    {props.isAdmin &&\r\n                    <span className=\"admin-icon\" onClick={() => openModal(data[_el], index)}>\r\n                        <Icon name=\"pencil\"/>\r\n                    </span>}\r\n                    {subMenu ? <ul className={classes['submenu_dropdown']}>{subMenu}</ul> : ''}\r\n                </li>\r\n            )\r\n        });\r\n        return (<Fragment>{_li}</Fragment>)\r\n    }\r\n};\r\n\r\nLi.propTypes = {\r\n    openPropModal: PropTypes.func,\r\n    parent: PropTypes.object,\r\n    isAdmin: PropTypes.bool,\r\n};\r\n\r\nclass Categories extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            crudType: '',\r\n            categoryList: {},\r\n            editCategoryData: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.routerQueries = this.routerQueries.bind(this);\r\n        this.handlerChangesCRUD = this.handlerChangesCRUD.bind(this);\r\n        this.categoryRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n            const { data } = await axios.get('/api/get/categories');\r\n            if (data.error) throw Error(data.error);\r\n\r\n            this.setState({\r\n                categoryList: (() => {\r\n                    const list = {};\r\n                    for (let i = 0; i < data.category.length; i++) {\r\n                        list[data.category[i].name] = {\r\n                            text: data.category[i].name,\r\n                            queryCategory: data.category[i].slug,\r\n                            link: { pathname: '/shop?category=' + data.category[i].slug + this.routerQueries(['category']) },\r\n                            dataSub: data.subCategory.reduce((acc, sub) => {\r\n                                if (sub.category === data.category[i].name) {\r\n                                    acc.push({\r\n                                        queryCategory: data.category[i].slug,\r\n                                        querySubCategory: sub.slug,\r\n                                        text: sub.name,\r\n                                        id: sub._id,\r\n                                        link: { pathname: '/shop?category=' + data.category[i].slug + '&subCategory=' + sub.slug + this.routerQueries(['category', 'subCategory']) }\r\n                                    })\r\n                                }\r\n                                return acc\r\n                            }, [])\r\n                        }\r\n                    }\r\n                    return list\r\n                })()\r\n            }, () => {\r\n                this.props.__SET_CATEGORY_LIST(this.state.categoryList)\r\n            })\r\n        } catch (err) {\r\n            toast.error(err.response ? err.response.data : err.message, {\r\n                position: 'top-right',\r\n                autoClose: 3000,\r\n                pauseOnHover: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    routerQueries(besides) {\r\n        let queries = '';\r\n        Object.keys(Router.query).forEach(query => {\r\n            if (besides.indexOf(query) === -1) {\r\n                queries += ('&' + query + '=' + Router.query[query]);\r\n            }\r\n        });\r\n        return queries\r\n    }\r\n\r\n    openModal(type = 'add', dataEdit = {}) {\r\n        this.setState({\r\n            editCategoryData: dataEdit,\r\n            crudType: (typeof type === 'string') ? type : '',\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    handlerChangesCRUD(type, data, subData = []) {\r\n        if (type === 'edit' && data.edited) {\r\n            const nameCategory = data.newName || data.name;\r\n            let prevStateCategory = this.state.categoryList;\r\n            if (data.newName) {\r\n                const nameCategorySlug = (() => {\r\n                    const arr = prevStateCategory[data.name].link.pathname.split('/');\r\n                    arr.pop();\r\n                    arr.push(data.newSlug);\r\n                    return arr.join('/');\r\n                })();\r\n                prevStateCategory[data.newName] = prevStateCategory[data.name];\r\n                delete prevStateCategory[data.name];\r\n                prevStateCategory[data.newName].text = nameCategory;\r\n                prevStateCategory[data.newName].link.pathname = nameCategorySlug\r\n            }\r\n            const updatedCategoryList = JSON.parse(JSON.stringify(prevStateCategory[nameCategory]));\r\n            updatedCategoryList.dataSub = subData;\r\n            prevStateCategory[nameCategory] = updatedCategoryList;\r\n\r\n            const orderedPrevStateCategory = {};\r\n            Object.keys(prevStateCategory).sort().forEach(function (key) {\r\n                orderedPrevStateCategory[key] = prevStateCategory[key];\r\n            });\r\n            this.setState({\r\n                categoryList: {\r\n                    ...orderedPrevStateCategory,\r\n                }\r\n            })\r\n        } else if (type === 'edit' && data.removed) {\r\n            Object.filter = (obj, predicate) =>\r\n                Object.fromEntries(Object.entries(obj).filter(predicate));\r\n\r\n            const removedCategory = Object.filter(this.state.categoryList, ([name, list]) => list.text !== data.name);\r\n            this.setState({\r\n                categoryList: removedCategory\r\n            })\r\n        } else {\r\n            this.setState(prevState => ({\r\n                categoryList: {\r\n                    ...prevState.categoryList,\r\n                    [data.category.name]: {\r\n                        text: data.category.name,\r\n                        link: { pathname: '/shop/' + data.category.slug },\r\n                        dataSub: subData.map(sub => {\r\n                            return {\r\n                                id: sub._id,\r\n                                text: sub.name,\r\n                                link: { pathname: '/shop/' + data.category.slug + '/' + sub.slug }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    isAdmin() {\r\n        return this.props.isAdmin && this.props.isAdmin.roleType === 'admin'\r\n    }\r\n\r\n    render() {\r\n        return <div className={classes['categories-container']}>\r\n            <Modal isOpen={this.state.modal} toggle={this.openModal}>\r\n                <ModalHeader toggle={this.openModal}>Add Category</ModalHeader>\r\n                <ModalBody>\r\n                    <CRUDCategoryForm\r\n                        closeModal={this.openModal}\r\n                        handlerForm={this.handlerChangesCRUD}\r\n                        crudType={this.state.crudType}\r\n                        editCategoryData={this.state.editCategoryData}/>\r\n                </ModalBody>\r\n            </Modal>\r\n            <div className={`${classes['categories-container-header']} ${this.isAdmin() ? 'admin-icon-relative' : ''}`}>\r\n                <h4>\r\n                    Categories\r\n                </h4>\r\n                {this.isAdmin() && <span className=\"admin-icon\" onClick={() => this.openModal('add')}>\r\n                    <Icon name=\"plus\"/>\r\n                </span>}\r\n            </div>\r\n            <div className={classes['categories-container-body']}>\r\n                <ul type=\"none\" ref={this.categoryRef}>\r\n                    <Li\r\n                        data={this.state.categoryList}\r\n                        parent={this.categoryRef}\r\n                        isAdmin={this.isAdmin()}\r\n                        openPropModal={(data) => this.openModal('edit', data)}/>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAdmin: state.auth.user\r\n});\r\nconst mapDispatchToProps = {\r\n    __SET_CATEGORY_LIST,\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Categories);\r\n"]},"metadata":{},"sourceType":"module"}