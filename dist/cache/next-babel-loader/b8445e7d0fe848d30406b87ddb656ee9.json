{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useEffect, useCallback } from 'react';\nimport classes from './categories.scss';\nimport { Modal, ModalHeader, ModalBody, Tooltip } from 'reactstrap';\nimport Icon from 'components/Icons/icon';\nimport { ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN } from \"utils\";\nimport UI_ELEMENTS from \"components/shared/UI\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"lib/axiosEnv\";\nimport { toast } from \"react-toastify\";\nimport { __SET_CATEGORY_LIST } from 'store/actions';\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\n\nvar _require = require('utils/auth'),\n    getToken = _require.getToken;\n\nimport { Bus } from 'lib/EventEmitter';\n\nvar CRUDCategoryForm = function CRUDCategoryForm(props) {\n  var _useForm = useForm({\n    mode: 'onBlur'\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset,\n      setValue = _useForm.setValue;\n\n  var _useState = useState(false),\n      loadingCategory = _useState[0],\n      setLoadingCategory = _useState[1];\n\n  var _useState2 = useState(false),\n      tooltipOpen = _useState2[0],\n      setTooltipOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      typeCRUD = _useState3[0],\n      setTypeCRUD = _useState3[1];\n\n  var _useState4 = useState([]),\n      subCategoryContent = _useState4[0],\n      setSubCategoryContent = _useState4[1];\n\n  var _useState5 = useState(''),\n      categoryContent = _useState5[0],\n      setCategoryContent = _useState5[1];\n\n  var _useState6 = useState(null),\n      deepCategoryContent = _useState6[0],\n      setDeepCategoryContent = _useState6[1];\n\n  var toastOpt = {\n    position: \"top-right\",\n    autoClose: 3000,\n    pauseOnHover: false\n  };\n\n  var toggle = function toggle() {\n    return setTooltipOpen(!tooltipOpen);\n  }; // Generate new ParamName\n\n\n  var generateName = function generateName(begin, state) {\n    if (state.some(function (s) {\n      return s.name === 'subCategory' + begin;\n    })) {\n      return generateName(begin + 1, state);\n    } else return 'subCategory' + begin;\n  };\n\n  var addSubCategoryField = function addSubCategoryField() {\n    setSubCategoryContent(function (prevState) {\n      return [].concat(_toConsumableArray(prevState), [{\n        value: '',\n        name: generateName(0, subCategoryContent)\n      }]);\n    });\n  };\n\n  var saveChanges = function saveChanges(data) {\n    var fakeCategories = _toConsumableArray(subCategoryContent);\n\n    var index = fakeCategories.findIndex(function (item) {\n      return item.name === data.name;\n    });\n\n    if (index > -1) {\n      fakeCategories[index].value = data.value;\n    }\n  };\n\n  var removeCategory = useCallback(function (name, state) {\n    if (name === 'name') {\n      setCategoryContent('removed');\n      setSubCategoryContent([]);\n      return;\n    }\n\n    var prevState = _toConsumableArray(state);\n\n    var indexRem = prevState.findIndex(function (obj) {\n      return obj.name === name;\n    });\n\n    if (indexRem > -1) {\n      prevState.splice(indexRem, 1);\n    }\n\n    setSubCategoryContent(prevState);\n  }, [categoryContent, subCategoryContent]);\n  useEffect(function () {\n    if (_Object$keys(props.editCategoryData).length) {\n      // Saving Cloned Data before editing\n      setDeepCategoryContent(JSON.parse(_JSON$stringify(props.editCategoryData)));\n      setValue('name', props.editCategoryData.text);\n      setCategoryContent(props.editCategoryData.text);\n      props.editCategoryData.dataSub.forEach(function (el) {\n        setSubCategoryContent(function (prevState) {\n          return [].concat(_toConsumableArray(prevState), [{\n            value: el.text,\n            name: el.id\n          }]);\n        });\n      });\n    }\n  }, [props.editCategoryData]);\n  useEffect(function () {\n    setTypeCRUD(props.crudType);\n  }, [props.crudType]);\n  useEffect(function () {\n    subCategoryContent.forEach(function (e) {\n      if (props.crudType === 'edit') {\n        setValue(e.name, e.value);\n      }\n    });\n  }, [subCategoryContent]);\n\n  var reflect = function reflect(promise) {\n    return promise.then(function (v) {\n      return {\n        v: v,\n        status: \"fulfilled\"\n      };\n    }, function (e) {\n      return {\n        e: e,\n        status: \"rejected\"\n      };\n    });\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(dataCategory) {\n      var editedObj, parentSlug, getSubCategories, _ref2, data, added, removed, updated, addPromise, updatePromise, removePromise, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _loop2, _iterator2, _step2, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _loop3, _iterator3, _step3, promiseAllArr, results, success, updatedCategory, updatedSubCategory, addedSubCategory, removedSubCategory, _getSubCategories, _ref3, _data, promisesSub, subData, subCategoriesFail;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(typeCRUD === 'edit')) {\n                _context2.next = 89;\n                break;\n              }\n\n              editedObj = {};\n              parentSlug = deepCategoryContent.link.pathname.split('/').pop();\n              getSubCategories = _Object$keys(dataCategory).reduce(function (acc, sub) {\n                if (sub !== 'name') {\n                  if (!deepCategoryContent.dataSub.find(function (obj) {\n                    return obj.id === sub;\n                  })) {\n                    acc[sub] = dataCategory[sub];\n                  } else {\n                    acc[sub] = {\n                      name: deepCategoryContent.dataSub.find(function (obj) {\n                        return obj.id === sub;\n                      }).text,\n                      newName: dataCategory[sub],\n                      category: deepCategoryContent.text\n                    };\n                  }\n                }\n\n                return acc;\n              }, {});\n\n              if (dataCategory.hasOwnProperty('name')) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 8;\n              return axios[\"delete\"]('/api/remove/category', {\n                headers: {\n                  Authorization: getToken('token')\n                },\n                data: {\n                  name: deepCategoryContent.text\n                }\n              });\n\n            case 8:\n              _ref2 = _context2.sent;\n              data = _ref2.data;\n\n              if (!data.error) {\n                _context2.next = 12;\n                break;\n              }\n\n              throw Error(data.error);\n\n            case 12:\n              toast.dark(data.message, toastOpt);\n              props.handlerForm(typeCRUD, {\n                name: deepCategoryContent.text,\n                removed: true\n              });\n              return _context2.abrupt(\"return\");\n\n            case 15:\n              added = [], removed = [], updated = [];\n\n              if (dataCategory.name && dataCategory.name !== deepCategoryContent.text) {\n                updated.push({\n                  name: deepCategoryContent.text,\n                  text: dataCategory.name\n                });\n              } // Added\n\n\n              _Object$keys(getSubCategories).forEach(function (obj) {\n                if (obj.indexOf('subCategory') > -1) {\n                  added.push(_defineProperty({}, obj, getSubCategories[obj]));\n                }\n              }); // Removed\n\n\n              deepCategoryContent.dataSub.forEach(function (rem) {\n                if (!getSubCategories.hasOwnProperty(rem.id)) {\n                  removed.push({\n                    name: rem.text,\n                    category: deepCategoryContent.text\n                  });\n                }\n              }); // Updated\n\n              deepCategoryContent.dataSub.forEach(function (rem) {\n                if (getSubCategories.hasOwnProperty(rem.id) && getSubCategories[rem.id].newName !== rem.text) {\n                  var obj = getSubCategories[rem.id];\n                  updated.push({\n                    subName: obj.name,\n                    text: obj.newName,\n                    category: obj.category\n                  });\n                }\n              });\n              addPromise = [], updatePromise = [], removePromise = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 24;\n\n              _loop = function _loop() {\n                var add = _step.value;\n                addPromise.push(new _Promise(function (resolve, reject) {\n                  axios.post('/api/add/subCategory', {\n                    name: _Object$values(add)[0],\n                    category: dataCategory.name\n                  }, {\n                    headers: {\n                      Authorization: getToken('token')\n                    }\n                  }).then(function (res) {\n                    return resolve(res);\n                  })[\"catch\"](function (err) {\n                    return reject(err);\n                  });\n                }));\n              };\n\n              for (_iterator = _getIterator(added); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                _loop();\n              }\n\n              _context2.next = 33;\n              break;\n\n            case 29:\n              _context2.prev = 29;\n              _context2.t0 = _context2[\"catch\"](24);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 33:\n              _context2.prev = 33;\n              _context2.prev = 34;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 36:\n              _context2.prev = 36;\n\n              if (!_didIteratorError) {\n                _context2.next = 39;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 39:\n              return _context2.finish(36);\n\n            case 40:\n              return _context2.finish(33);\n\n            case 41:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context2.prev = 44;\n\n              _loop2 = function _loop2() {\n                var rem = _step2.value;\n                removePromise.push(new _Promise(function (resolve, reject) {\n                  axios[\"delete\"]('/api/delete/subCategory', {\n                    headers: {\n                      Authorization: getToken('token')\n                    },\n                    data: {\n                      name: rem.name,\n                      category: rem.category\n                    }\n                  }).then(function (res) {\n                    return resolve(res);\n                  })[\"catch\"](function (err) {\n                    return reject(err);\n                  });\n                }));\n              };\n\n              for (_iterator2 = _getIterator(removed); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                _loop2();\n              }\n\n              _context2.next = 53;\n              break;\n\n            case 49:\n              _context2.prev = 49;\n              _context2.t1 = _context2[\"catch\"](44);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context2.t1;\n\n            case 53:\n              _context2.prev = 53;\n              _context2.prev = 54;\n\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n\n            case 56:\n              _context2.prev = 56;\n\n              if (!_didIteratorError2) {\n                _context2.next = 59;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 59:\n              return _context2.finish(56);\n\n            case 60:\n              return _context2.finish(53);\n\n            case 61:\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context2.prev = 64;\n\n              _loop3 = function _loop3() {\n                var up = _step3.value;\n\n                if (up.subName) {\n                  // For sub Categories\n                  updatePromise.push(new _Promise(function (resolve, reject) {\n                    axios.put('/api/update/subCategory', {\n                      name: up.subName,\n                      newName: up.text,\n                      category: up.category\n                    }, {\n                      headers: {\n                        Authorization: getToken('token')\n                      }\n                    }).then(function (res) {\n                      return resolve(res);\n                    })[\"catch\"](function (err) {\n                      return reject(err);\n                    });\n                  }));\n                } else {\n                  // For Categories\n                  updatePromise.push(new _Promise(function (resolve, reject) {\n                    axios.put('/api/update/category', {\n                      name: up.name,\n                      text: up.text\n                    }, {\n                      headers: {\n                        Authorization: getToken('token')\n                      }\n                    }).then(function (res) {\n                      return resolve(res);\n                    })[\"catch\"](function (err) {\n                      return reject(err);\n                    });\n                  }));\n                }\n              };\n\n              for (_iterator3 = _getIterator(updated); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                _loop3();\n              }\n\n              _context2.next = 73;\n              break;\n\n            case 69:\n              _context2.prev = 69;\n              _context2.t2 = _context2[\"catch\"](64);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context2.t2;\n\n            case 73:\n              _context2.prev = 73;\n              _context2.prev = 74;\n\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n\n            case 76:\n              _context2.prev = 76;\n\n              if (!_didIteratorError3) {\n                _context2.next = 79;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 79:\n              return _context2.finish(76);\n\n            case 80:\n              return _context2.finish(73);\n\n            case 81:\n              promiseAllArr = [].concat(_toConsumableArray(updatePromise), _toConsumableArray(addPromise), _toConsumableArray(removePromise));\n              _context2.next = 84;\n              return _Promise.all(promiseAllArr.map(reflect));\n\n            case 84:\n              results = _context2.sent;\n              success = results.filter(function (x) {\n                return x.status === \"fulfilled\";\n              });\n\n              if (success.length !== promiseAllArr.length) {\n                toast.error('Some request went wrong!', toastOpt);\n              } else {\n                toast.dark('Requests was gone successfully!', toastOpt);\n                updatedCategory = success.filter(function (x) {\n                  return x.v.data.updatedCategory;\n                });\n                updatedSubCategory = success.filter(function (x) {\n                  return x.v.data.updatedSubCategory;\n                });\n                addedSubCategory = success.filter(function (x) {\n                  return x.v.data.subCategory;\n                });\n                removedSubCategory = success.filter(function (x) {\n                  return x.v.data.removedSubCategory;\n                });\n                editedObj.dataSub = deepCategoryContent.dataSub;\n                editedObj.data = {\n                  name: deepCategoryContent.text,\n                  edited: true\n                };\n\n                if (updatedCategory.length) {\n                  editedObj.data.newName = updatedCategory[0].v.data.updatedCategory.name;\n                  parentSlug = editedObj.data.newSlug = updatedCategory[0].v.data.updatedCategory.slug;\n                  editedObj.dataSub.forEach(function (el) {\n                    var linkSub = el.link.pathname.split('/').pop();\n                    el.link.pathname = '/shop/' + parentSlug + '/' + linkSub;\n                  });\n                }\n\n                if (updatedSubCategory.length) {\n                  updatedSubCategory.forEach(function (el) {\n                    var findOldSub = editedObj.dataSub.findIndex(function (i) {\n                      return i.text === el.v.data.updatedSubCategory.oldName;\n                    });\n\n                    if (findOldSub > -1) {\n                      editedObj.dataSub[findOldSub].text = el.v.data.updatedSubCategory.name;\n                      editedObj.dataSub[findOldSub].link.pathname = '/shop/' + parentSlug + '/' + el.v.data.updatedSubCategory.slug;\n                    }\n                  });\n                }\n\n                if (removedSubCategory.length) {\n                  removedSubCategory.forEach(function (el) {\n                    var findRemSub = editedObj.dataSub.findIndex(function (i) {\n                      return i.text === el.v.data.removedSubCategory.name;\n                    });\n\n                    if (findRemSub > -1) {\n                      editedObj.dataSub.splice(findRemSub, 1);\n                    }\n                  });\n                }\n\n                if (addedSubCategory.length) {\n                  addedSubCategory.forEach(function (el) {\n                    var added = el.v.data.subCategory;\n\n                    if (added) {\n                      editedObj.dataSub.push({\n                        id: added._id,\n                        text: added.name,\n                        link: {\n                          pathname: '/shop/' + parentSlug + '/' + added.slug\n                        }\n                      });\n                    }\n                  });\n                }\n\n                props.handlerForm(typeCRUD, editedObj.data, editedObj.dataSub);\n              }\n\n              _context2.next = 108;\n              break;\n\n            case 89:\n              _getSubCategories = _Object$keys(dataCategory).reduce(function (acc, sub) {\n                if (sub !== 'name') acc[sub] = dataCategory[sub];\n                return acc;\n              }, {}); // Remove all Sub category fields before creating\n\n              if (_Object$keys(_getSubCategories).length) {\n                _Object$keys(_getSubCategories).forEach(function (remSub) {\n                  return delete dataCategory[remSub];\n                });\n              }\n\n              _context2.next = 93;\n              return axios.post('/api/add/category', dataCategory, {\n                headers: {\n                  Authorization: getToken('token')\n                }\n              });\n\n            case 93:\n              _ref3 = _context2.sent;\n              _data = _ref3.data;\n\n              if (!_data.error) {\n                _context2.next = 97;\n                break;\n              }\n\n              throw Error(_data.error.message || _data.error);\n\n            case 97:\n              // If there are SubCategories\n              promisesSub = [];\n              subData = [];\n              subCategoriesFail = false;\n              _context2.next = 102;\n              return function () {\n                if (_Object$keys(_getSubCategories).length) {\n                  var _loop4 = function _loop4(i, _p) {\n                    _p = _p.then(function (_) {\n                      return new _Promise(\n                      /*#__PURE__*/\n                      function () {\n                        var _ref4 = _asyncToGenerator(\n                        /*#__PURE__*/\n                        _regeneratorRuntime.mark(function _callee(resolve) {\n                          var dataSub;\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  _context.next = 2;\n                                  return axios.post('/api/add/subCategory', {\n                                    name: _getSubCategories[_Object$keys(_getSubCategories)[i]],\n                                    category: _data.category.name\n                                  }, {\n                                    headers: {\n                                      Authorization: getToken('token')\n                                    }\n                                  });\n\n                                case 2:\n                                  dataSub = _context.sent;\n                                  if (dataSub.data.error) subCategoriesFail = true;else {\n                                    subData.push(dataSub.data.subCategory);\n                                  }\n                                  resolve();\n\n                                case 5:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        return function (_x2) {\n                          return _ref4.apply(this, arguments);\n                        };\n                      }());\n                    });\n                    promisesSub.push(_p);\n                    p = _p;\n                  };\n\n                  for (var i = 0, p = _Promise.resolve(); i < _Object$keys(_getSubCategories).length; i++) {\n                    _loop4(i, p);\n                  }\n                }\n\n                return _Promise.all(promisesSub);\n              }();\n\n            case 102:\n              if (!subCategoriesFail) {\n                _context2.next = 106;\n                break;\n              }\n\n              throw Error('Something went wrong with Sub Categories!');\n\n            case 106:\n              toast.dark(_data.message, toastOpt);\n              props.handlerForm(typeCRUD, _data, subData);\n\n            case 108:\n              _context2.next = 113;\n              break;\n\n            case 110:\n              _context2.prev = 110;\n              _context2.t3 = _context2[\"catch\"](0);\n              toast.error(_context2.t3.response ? _context2.t3.response.data : _context2.t3.message, toastOpt);\n\n            case 113:\n              _context2.prev = 113;\n              props.closeModal();\n              reset();\n              return _context2.finish(113);\n\n            case 117:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 110, 113, 117], [24, 29, 33, 41], [34,, 36, 40], [44, 49, 53, 61], [54,, 56, 60], [64, 69, 73, 81], [74,, 76, 80]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    id: \"category-form\",\n    onSubmit: handleSubmit(onSubmit)\n  }, categoryContent !== 'removed' ? __jsx(\"div\", {\n    className: classes['parentUI-input']\n  }, __jsx(UI_ELEMENTS.Input, {\n    type: \"text\",\n    name: \"name\",\n    refBind: categoryContent ? React.createRef() : register(ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN),\n    errors: errors.name && errors.name.message,\n    fullWidth: true,\n    placeholder: \"Name\",\n    size: \"sm\"\n  }), __jsx(\"span\", {\n    className: classes['remove-icon'],\n    onClick: function onClick() {\n      return removeCategory('name', categoryContent);\n    }\n  }, __jsx(Icon, {\n    name: \"close\"\n  }))) : '', subCategoryContent.length ? __jsx(\"div\", {\n    className: classes.subCategoryContent\n  }, \" \", subCategoryContent.map(function (_, index) {\n    return __jsx(\"div\", {\n      key: _.category + _.name,\n      className: classes['parentUI-input']\n    }, __jsx(UI_ELEMENTS.Input, {\n      type: \"text\",\n      events: ['change'],\n      onChange: function onChange(e) {\n        return saveChanges({\n          value: e.target.value,\n          name: _.name\n        });\n      },\n      name: _.name,\n      refBind: register(ONLY_ENGLISH_LETTERS_WITH_DIGIT_PATTERN),\n      errors: errors[_.name] && errors[_.name].message,\n      fullWidth: true,\n      placeholder: \"Sub category name\",\n      size: \"sm\"\n    }), __jsx(\"span\", {\n      className: classes['remove-icon'],\n      onClick: function onClick() {\n        return removeCategory(_.name, subCategoryContent);\n      }\n    }, __jsx(Icon, {\n      name: \"close\"\n    })));\n  })) : '', __jsx(\"div\", {\n    className: classes.addCategory\n  }, __jsx(UI_ELEMENTS.Button, {\n    icon: loadingCategory ? {\n      dir: 'right',\n      element: 'loading'\n    } : {},\n    type: \"submit\",\n    text: \"Save\",\n    width: 100,\n    margin: ['0px', '0', '0', 'auto'],\n    attr: [{\n      id: 'saveBtn'\n    }],\n    size: \"sm\"\n  }), categoryContent !== 'removed' ? __jsx(\"a\", {\n    id: \"add-category-sub\",\n    onClick: addSubCategoryField\n  }, \"+\") : ''), __jsx(Tooltip, {\n    placement: \"right\",\n    isOpen: tooltipOpen,\n    target: \"add-category-sub\",\n    toggle: toggle\n  }, \"Add Sub Category\")));\n};\n\nvar Li = function Li(props) {\n  var data = props.data,\n      parent = props.parent;\n\n  var _useState7 = useState(false),\n      open = _useState7[0],\n      setOpen = _useState7[1];\n\n  var _useState8 = useState(0),\n      height = _useState8[0],\n      setHeight = _useState8[1];\n\n  var openSubMenu = function openSubMenu(evt, index) {\n    setHeight(height = 0);\n    evt.stopPropagation();\n    evt.preventDefault();\n    setOpen(open = parent.current.children[index] && parent.current.children[index].classList.contains('openItemDropdown'));\n    parent.current.children[index].classList[!open ? 'add' : 'remove']('openItemDropdown');\n    !open ? parent.current.children[index].querySelectorAll('.' + classes[\"submenu_dropdown\"] + ' > li').forEach(function (_) {\n      return setHeight(height += _.getBoundingClientRect().height);\n    }) : setHeight(height = 0);\n    parent.current.children[index].querySelector('.' + classes[\"submenu_dropdown\"]).style.maxHeight = height + 'px';\n  };\n\n  var goToShop = function goToShop(path) {\n    _Object$keys(Router.query).forEach(function (qu) {\n      // Remove unnecessary query params\n      if (qu !== 'name' && qu !== 'category' && qu !== 'subCategory' && qu !== 'page' && qu !== 'maxPrice' && qu !== 'minPrice') delete Router.query[qu];\n    });\n\n    var query = _objectSpread({}, Router.query);\n\n    if (path.hasOwnProperty('querySubCategory')) {\n      query.category = path.queryCategory;\n      query.subCategory = path.querySubCategory;\n    } else if (path.hasOwnProperty('queryCategory')) {\n      query.category = path.queryCategory;\n      delete query.subCategory;\n    }\n\n    query.page = 1;\n    Router.push({\n      pathname: '/shop',\n      query: _objectSpread({}, query)\n    }).then(function () {\n      return Bus.dispatch('filterByCategory');\n    });\n  };\n\n  var openModal = function openModal(el, index) {\n    setHeight(0);\n    setOpen(true);\n    parent.current.children[index].classList.remove('openItemDropdown');\n\n    if (!open && parent.current.children[index].querySelector('.' + classes[\"submenu_dropdown\"])) {\n      parent.current.children[index].querySelector('.' + classes[\"submenu_dropdown\"]).style.maxHeight = '0px';\n    }\n\n    props.openPropModal(el);\n  };\n\n  if (data instanceof Object) {\n    var _li = _Object$keys(data).map(function (_el, index) {\n      var display = data[_el].link.pathname ? __jsx(\"a\", {\n        onClick: function onClick() {\n          return goToShop(data[_el]);\n        }\n      }, data[_el].text, \" \", data[_el].hasOwnProperty('dataSub') && _Object$keys(data[_el].dataSub).length > 0 ? __jsx(\"span\", {\n        className: classes[\"dropdown_arrow\"],\n        onClick: function onClick(e) {\n          return openSubMenu(e, index);\n        }\n      }) : '') : __jsx(\"span\", null, data[_el].text);\n      var subMenu;\n\n      if (data[_el].hasOwnProperty('dataSub') && _Object$keys(data[_el].dataSub).length > 0) {\n        subMenu = __jsx(Li, {\n          data: data[_el].dataSub,\n          isAdmin: props.isAdmin\n        });\n      }\n\n      return __jsx(\"li\", {\n        key: index,\n        className: props.isAdmin ? 'admin-icon-relative' : ''\n      }, display, props.isAdmin && __jsx(\"span\", {\n        className: \"admin-icon\",\n        onClick: function onClick() {\n          return openModal(data[_el], index);\n        }\n      }, __jsx(Icon, {\n        name: \"pencil\"\n      })), subMenu ? __jsx(\"ul\", {\n        className: classes[\"submenu_dropdown\"]\n      }, subMenu) : '');\n    });\n\n    return __jsx(Fragment, null, _li);\n  }\n};\n\nvar Categories =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Categories, _React$Component);\n\n  var _super = _createSuper(Categories);\n\n  function Categories(props) {\n    var _this;\n\n    _classCallCheck(this, Categories);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _ref6, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get('/api/get/categories');\n\n            case 3:\n              _ref6 = _context3.sent;\n              data = _ref6.data;\n\n              if (!data.error) {\n                _context3.next = 7;\n                break;\n              }\n\n              throw Error(data.error);\n\n            case 7:\n              _this.setState({\n                categoryList: function () {\n                  var list = {};\n\n                  var _loop5 = function _loop5(i) {\n                    list[data.category[i].name] = {\n                      text: data.category[i].name,\n                      queryCategory: data.category[i].slug,\n                      link: {\n                        pathname: '/shop?category=' + data.category[i].slug + _this.routerQueries(['category'])\n                      },\n                      dataSub: data.subCategory.reduce(function (acc, sub) {\n                        if (sub.category === data.category[i].name) {\n                          acc.push({\n                            queryCategory: data.category[i].slug,\n                            querySubCategory: sub.slug,\n                            text: sub.name,\n                            id: sub._id,\n                            link: {\n                              pathname: '/shop?category=' + data.category[i].slug + '&subCategory=' + sub.slug + _this.routerQueries(['category', 'subCategory'])\n                            }\n                          });\n                        }\n\n                        return acc;\n                      }, [])\n                    };\n                  };\n\n                  for (var i = 0; i < data.category.length; i++) {\n                    _loop5(i);\n                  }\n\n                  return list;\n                }()\n              }, function () {\n                _this.props.__SET_CATEGORY_LIST(_this.state.categoryList);\n              });\n\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              toast.error(_context3.t0.response ? _context3.t0.response.data : _context3.t0.message, {\n                position: \"top-right\",\n                autoClose: 3000,\n                pauseOnHover: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    })));\n\n    _this.state = {\n      modal: false,\n      crudType: '',\n      categoryList: {},\n      editCategoryData: {}\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_this));\n    _this.routerQueries = _this.routerQueries.bind(_assertThisInitialized(_this));\n    _this.handlerChangesCRUD = _this.handlerChangesCRUD.bind(_assertThisInitialized(_this));\n    _this.categoryRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Categories, [{\n    key: \"routerQueries\",\n    value: function routerQueries(besides) {\n      var queries = '';\n\n      _Object$keys(Router.query).forEach(function (query) {\n        if (besides.indexOf(query) === -1) {\n          queries += '&' + query + '=' + Router.query[query];\n        }\n      });\n\n      return queries;\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'add';\n      var dataEdit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.setState({\n        editCategoryData: dataEdit,\n        crudType: typeof type === 'string' ? type : '',\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"handlerChangesCRUD\",\n    value: function handlerChangesCRUD(type, data) {\n      var subData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      if (type === 'edit' && data.edited) {\n        var nameCategory = data.newName || data.name;\n        var prevStateCategory = this.state.categoryList;\n\n        if (data.newName) {\n          var nameCategorySlug = function () {\n            var arr = prevStateCategory[data.name].link.pathname.split('/');\n            arr.pop();\n            arr.push(data.newSlug);\n            return arr.join('/');\n          }();\n\n          prevStateCategory[data.newName] = prevStateCategory[data.name];\n          delete prevStateCategory[data.name];\n          prevStateCategory[data.newName].text = nameCategory;\n          prevStateCategory[data.newName].link.pathname = nameCategorySlug;\n        }\n\n        var updatedCategoryList = JSON.parse(_JSON$stringify(prevStateCategory[nameCategory]));\n        updatedCategoryList.dataSub = subData;\n        prevStateCategory[nameCategory] = updatedCategoryList;\n        var orderedPrevStateCategory = {};\n\n        _Object$keys(prevStateCategory).sort().forEach(function (key) {\n          orderedPrevStateCategory[key] = prevStateCategory[key];\n        });\n\n        this.setState({\n          categoryList: _objectSpread({}, orderedPrevStateCategory)\n        });\n      } else if (type === 'edit' && data.removed) {\n        Object.filter = function (obj, predicate) {\n          return Object.fromEntries(_Object$entries(obj).filter(predicate));\n        };\n\n        var removedCategory = Object.filter(this.state.categoryList, function (_ref7) {\n          var _ref8 = _slicedToArray(_ref7, 2),\n              name = _ref8[0],\n              list = _ref8[1];\n\n          return list.text !== data.name;\n        });\n        this.setState({\n          categoryList: removedCategory\n        });\n      } else {\n        this.setState(function (prevState) {\n          return {\n            categoryList: _objectSpread({}, prevState.categoryList, _defineProperty({}, data.category.name, {\n              text: data.category.name,\n              link: {\n                pathname: '/shop/' + data.category.slug\n              },\n              dataSub: subData.map(function (sub) {\n                return {\n                  id: sub._id,\n                  text: sub.name,\n                  link: {\n                    pathname: '/shop/' + data.category.slug + '/' + sub.slug\n                  }\n                };\n              })\n            }))\n          };\n        });\n      }\n    }\n  }, {\n    key: \"isAdmin\",\n    value: function isAdmin() {\n      return this.props.isAdmin && this.props.isAdmin.roleType === 'admin';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: classes[\"categories-container\"]\n      }, __jsx(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.openModal\n      }, __jsx(ModalHeader, {\n        toggle: this.openModal\n      }, \"Add Category\"), __jsx(ModalBody, null, __jsx(CRUDCategoryForm, {\n        closeModal: this.openModal,\n        handlerForm: this.handlerChangesCRUD,\n        crudType: this.state.crudType,\n        editCategoryData: this.state.editCategoryData\n      }))), __jsx(\"div\", {\n        className: \"\".concat(classes[\"categories-container-header\"], \" \").concat(this.isAdmin() ? 'admin-icon-relative' : '')\n      }, __jsx(\"h4\", null, \"Categories\"), this.isAdmin() && __jsx(\"span\", {\n        className: \"admin-icon\",\n        onClick: function onClick() {\n          return _this2.openModal('add');\n        }\n      }, __jsx(Icon, {\n        name: \"plus\"\n      }))), __jsx(\"div\", {\n        className: classes[\"categories-container-body\"]\n      }, __jsx(\"ul\", {\n        type: \"none\",\n        ref: this.categoryRef\n      }, __jsx(Li, {\n        data: this.state.categoryList,\n        parent: this.categoryRef,\n        isAdmin: this.isAdmin(),\n        openPropModal: function openPropModal(data) {\n          return _this2.openModal('edit', data);\n        }\n      }))));\n    }\n  }]);\n\n  return Categories;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAdmin: state.auth.user\n  };\n};\n\nvar mapDispatchToProps = {\n  __SET_CATEGORY_LIST: __SET_CATEGORY_LIST\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","map":null,"metadata":{},"sourceType":"module"}