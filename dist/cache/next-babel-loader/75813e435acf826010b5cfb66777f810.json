{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport classes from './navBar.scss';\nimport Router, { useRouter } from 'next/router';\n\nvar NavBarWithRouter = function NavBarWithRouter(props) {\n  var router = useRouter();\n  return __jsx(NavBar, _extends({}, props, {\n    router: router\n  }));\n};\n\nvar NavBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavBar, _React$Component);\n\n  var _super = _createSuper(NavBar);\n\n  function NavBar(props) {\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    _this = _super.call(this, props);\n    _this._navBarRef = React.createRef();\n    _this.state = {\n      activeRouteIndex: 1,\n      items: [{\n        text: 'Home',\n        link: {\n          pathname: '/',\n          state: {\n            id: 1,\n            title: 'Home'\n          }\n        }\n      }, {\n        text: 'Sale Products',\n        link: {\n          pathname: '/shop',\n          state: {\n            id: 2,\n            title: 'Products'\n          }\n        }\n      }, {\n        text: 'Contact Us',\n        link: {\n          pathname: '/contact',\n          state: {\n            id: 3,\n            title: 'Contact Us'\n          }\n        }\n      }, {\n        text: 'About Us',\n        link: {\n          pathname: '/about',\n          state: {\n            id: 4,\n            title: 'About Us'\n          }\n        }\n      }],\n      _bindWavePosition: undefined\n    };\n    _this.__goToRoute = _this.__goToRoute.bind(_assertThisInitialized(_this));\n    _this.RouterEvent = _this.RouterEvent.bind(_assertThisInitialized(_this));\n    Router.events.on('routeChangeComplete', _this.RouterEvent);\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Router.events.off('routeChangeComplete', this.RouterEvent);\n    }\n  }, {\n    key: \"RouterEvent\",\n    value: function RouterEvent(url) {\n      var _this2 = this;\n\n      this.setState({\n        activeRouteIndex: this.props.router.query ? this.props.router.query.indexPage || this.__getDefaultIndexRouter() : 1\n      }, function () {\n        _this2._getPositionOfWave(_this2.state.activeRouteIndex);\n      });\n    }\n  }, {\n    key: \"__goToRoute\",\n    value: function __goToRoute(leave) {\n      this._getPositionOfWave(leave === 'leave' ? this.state.activeRouteIndex : leave);\n    }\n  }, {\n    key: \"__getDefaultIndexRouter\",\n    value: function __getDefaultIndexRouter() {\n      var _this3 = this;\n\n      var index = null;\n      this.state.items.map(function (_, _ind) {\n        if (_.link.pathname === _this3.props.router.route) {\n          index = _ind + 1;\n        }\n      });\n      return index;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.setState({\n        activeRouteIndex: this.props.router.query ? this.props.router.query.indexPage || this.__getDefaultIndexRouter() : 1\n      }, function () {\n        _this4._getPositionOfWave(_this4.state.activeRouteIndex);\n      });\n    }\n  }, {\n    key: \"_getPositionOfWave\",\n    value: function _getPositionOfWave(index) {\n      index ? this.setState({\n        _bindWavePosition: {\n          top: 0,\n          opacity: 1,\n          width: this._navBarRef.current.querySelectorAll('a')[index - 1].getBoundingClientRect().width + 'px',\n          left: this._navBarRef.current.querySelectorAll('a')[index - 1].offsetLeft + 'px'\n        }\n      }) : this.setState({\n        _bindWavePosition: {\n          opacity: 0\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var item = this.state.items.map(function (_) {\n        return __jsx(\"a\", {\n          key: _.link.state.id,\n          href: _.link.pathname,\n          onMouseEnter: function onMouseEnter() {\n            return _this5.__goToRoute(_.link.state.id);\n          },\n          \"data-index\": _.link.state.id\n        }, _.text);\n      });\n      return __jsx(\"div\", {\n        className: classes['nav-bar-ln']\n      }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n        xs: \"12\",\n        md: \"8\",\n        lg: \"9\"\n      }, __jsx(\"nav\", {\n        ref: this._navBarRef,\n        onMouseLeave: function onMouseLeave() {\n          return _this5.__goToRoute('leave');\n        }\n      }, __jsx(\"span\", {\n        className: classes['wave_active'],\n        style: this.state._bindWavePosition\n      }), item)), __jsx(Col, {\n        className: classes['phone-nav-bar'],\n        xs: \"4\",\n        md: \"4\",\n        lg: \"3\"\n      }, __jsx(\"div\", {\n        className: classes['call-us-wrap']\n      }, __jsx(\"a\", {\n        href: \"tel:+37494129604\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        }\n      }, \" Call Us +374 94 12 96 04\"))))));\n    }\n  }]);\n\n  return NavBar;\n}(React.Component);\n\nexport default NavBarWithRouter;","map":null,"metadata":{},"sourceType":"module"}