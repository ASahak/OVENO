{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React, { createRef } from 'react';\nimport classes from './home-slider.scss';\n\nvar HomeSlider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomeSlider, _React$Component);\n\n  var _super = _createSuper(HomeSlider);\n\n  function HomeSlider(props) {\n    var _this;\n\n    _classCallCheck(this, HomeSlider);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      timer: 0,\n      activeIndex: 0,\n      dotsCount: null,\n      styleWrapper: {}\n    };\n    _this.images = ['slider1', 'slider2', 'slider3'];\n    _this._slide = _this._slide.bind(_assertThisInitialized(_this));\n    _this.touchStart = _this.touchStart.bind(_assertThisInitialized(_this));\n    _this.touchMove = _this.touchMove.bind(_assertThisInitialized(_this));\n    _this.touchEnd = _this.touchEnd.bind(_assertThisInitialized(_this));\n    _this.getSliderPosition = _this.getSliderPosition.bind(_assertThisInitialized(_this));\n    _this.slider = React.createRef();\n    _this.svg = React.createRef();\n    _this.autoPlayInterval = null;\n    _this.progressSpinner = null;\n    _this.touchX = 0;\n    return _this;\n  }\n\n  _createClass(HomeSlider, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      if (this.props.dots) {\n        this.setState({\n          dotsCount: this.images.length\n        });\n      }\n\n      this.setState({\n        styleWrapper: {\n          'transform': 'translate3d(0px, 0px, 0px)'\n        }\n      });\n    }\n  }, {\n    key: \"handleVisibilityChange\",\n    value: function handleVisibilityChange(hidden) {\n      if (document[hidden]) {\n        clearInterval(this.progressSpinner);\n        clearInterval(this.autoPlayInterval);\n      } else {\n        clearInterval(this.progressSpinner);\n        clearInterval(this.autoPlayInterval);\n        this.IntervalProgress();\n        this.AutoPlayWithTimer(this.state.timer);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var hidden, visibilityChange;\n\n      if (typeof document.hidden !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        hidden = \"hidden\";\n        visibilityChange = 'visibilitychange';\n      } else if (typeof document.msHidden !== 'undefined') {\n        hidden = 'msHidden';\n        visibilityChange = 'msvisibilitychange';\n      } else if (typeof document.webkitHidden !== 'undefined') {\n        hidden = 'webkitHidden';\n        visibilityChange = 'webkitvisibilitychange';\n      }\n\n      if (typeof document.addEventListener === \"undefined\" || hidden === undefined) {\n        console.log(\"This demo requires a browser, such as Google Chrome or Firefox, that supports the Page Visibility API.\");\n      } else {\n        // Handle page visibility change\n        document.addEventListener(visibilityChange, this.handleVisibilityChange.bind(this, hidden), false);\n      } // AutoPlay\n\n\n      if (this.props.autoplay) {\n        var timer = this.props.timer || 3000;\n        this.setState({\n          timer: timer\n        }, function () {\n          _this2.IntervalProgress();\n\n          _this2.AutoPlayWithTimer(timer);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.autoPlayInterval);\n      clearInterval(this.progressSpinner);\n    }\n  }, {\n    key: \"touchStart\",\n    value: function touchStart(event) {\n      this.touchX = event.touches[0].pageX;\n    }\n  }, {\n    key: \"touchMove\",\n    value: function touchMove(event) {\n      clearInterval(this.progressSpinner);\n      clearInterval(this.autoPlayInterval);\n      this.getSliderPosition('touchMove', event.touches[0].pageX);\n    }\n  }, {\n    key: \"touchEnd\",\n    value: function touchEnd(event) {\n      clearInterval(this.progressSpinner);\n      clearInterval(this.autoPlayInterval);\n      this.getSliderPosition('touchEnd', event.changedTouches[0].pageX);\n    }\n  }, {\n    key: \"IntervalProgress\",\n    value: function IntervalProgress() {\n      var _this3 = this;\n\n      var percentage = 0;\n      clearInterval(this.progressSpinner);\n      this.progressSpinner = setInterval(function () {\n        if (_this3.svg.current && percentage < 100) {\n          percentage += 1;\n          _this3.svg.current.style.background = 'conic-gradient(#f01b48 ' + percentage + '%, 0, #f4f4f4 66%)';\n        }\n      }, this.state.timer / 100);\n    }\n  }, {\n    key: \"AutoPlayWithTimer\",\n    value: function AutoPlayWithTimer(timer) {\n      var _this4 = this;\n\n      this.autoPlayInterval = setInterval(function () {\n        _this4.IntervalProgress();\n\n        var _activeIndex = _this4.state.activeIndex;\n        if (_activeIndex === _this4.state.dotsCount - 1) _activeIndex = 0;else _activeIndex++;\n\n        _this4.setState({\n          activeIndex: _activeIndex\n        }, function () {\n          _this4.getSliderPosition();\n        });\n      }, timer);\n    }\n  }, {\n    key: \"Slide\",\n    value: function Slide(name, index) {\n      return __jsx(\"div\", {\n        key: index,\n        className: classes['main-slider__slide']\n      }, __jsx(\"img\", {\n        src: require('../../../assets/images/global/' + name + '.jpg'),\n        alt: \"\"\n      }));\n    }\n  }, {\n    key: \"_slide\",\n    value: function _slide(index) {\n      var _this5 = this;\n\n      if (index !== this.state.activeIndex) {\n        clearInterval(this.progressSpinner);\n        this.IntervalProgress();\n        clearInterval(this.autoPlayInterval);\n        this.setState({\n          activeIndex: index\n        }, function () {\n          _this5.getSliderPosition();\n\n          _this5.IntervalProgress();\n\n          _this5.props.autoplay && _this5.AutoPlayWithTimer(_this5.state.timer);\n        });\n      }\n    }\n  }, {\n    key: \"getSliderPosition\",\n    value: function getSliderPosition(type, touchX) {\n      var _this6 = this;\n\n      var widthSlider = this.slider.current && this.slider.current.getBoundingClientRect().width || 0;\n\n      if (type === 'touchMove') {\n        this.setState({\n          styleWrapper: {\n            'transition': '0s',\n            'transform': 'translate3d(' + -(this.touchX - touchX + widthSlider * this.state.activeIndex) + 'px, 0px, 0px)'\n          }\n        });\n      } else if (type === 'touchEnd') {\n        if (this.touchX > touchX) {\n          var ind = this.state.activeIndex;\n          if (ind === this.state.dotsCount - 1) ind = this.state.dotsCount - 1;else ind++;\n          this.setState({\n            activeIndex: ind\n          }, function () {\n            _this6.getSliderPosition();\n\n            _this6.IntervalProgress();\n\n            _this6.AutoPlayWithTimer(_this6.state.timer);\n          });\n        } else {\n          var _ind = this.state.activeIndex;\n          if (_ind === 0) _ind = 0;else _ind--;\n          this.setState({\n            activeIndex: _ind\n          }, function () {\n            _this6.getSliderPosition();\n\n            _this6.IntervalProgress();\n\n            _this6.AutoPlayWithTimer(_this6.state.timer);\n          });\n        }\n      } else {\n        this.setState({\n          styleWrapper: {\n            'transform': 'translate3d(' + -(widthSlider * this.state.activeIndex) + 'px, 0px, 0px)'\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var Dots = function Dots() {\n        var dots = Array(_this7.state.dotsCount).fill('').map(function (_, index) {\n          return __jsx(\"span\", {\n            onClick: function onClick() {\n              return _this7._slide(index);\n            },\n            className: \"\".concat(index === _this7.state.activeIndex ? 'active-bullet' : '', \" bullet\"),\n            key: index\n          });\n        });\n        return __jsx(\"div\", {\n          className: \"slider-dots\"\n        }, dots);\n      };\n\n      var Spinner = function Spinner() {\n        return __jsx(\"div\", {\n          className: \"spinner_wrapper\"\n        }, __jsx(\"div\", {\n          className: \"circle\",\n          ref: _this7.svg\n        }));\n      };\n\n      return __jsx(\"div\", {\n        className: classes['main-slider'],\n        ref: this.slider\n      }, __jsx(\"div\", {\n        className: classes['main-slider__container'],\n        onTouchStart: this.touchStart,\n        onTouchMove: this.touchMove,\n        onTouchEnd: this.touchEnd\n      }, this.props.autoplay && __jsx(Spinner, null), __jsx(\"div\", {\n        className: classes['main-slider__wrapper'],\n        style: this.state.styleWrapper\n      }, this.images.map(this.Slide))), this.props.dots && __jsx(Dots, null));\n    }\n  }]);\n\n  return HomeSlider;\n}(React.Component);\n\nexport { HomeSlider as default };","map":null,"metadata":{},"sourceType":"module"}