{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\");\n\nvar _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nvar cookie = require('js-cookie');\n\nvar axios = require('axios');\n\nvar jwtDecode = require('jwt-decode');\n\nmodule.exports = {\n  setToken: function setToken(token) {\n    cookie.set('token', token, {\n      expires: 1\n      /*1 day*/\n\n    });\n  },\n  getToken: function getToken() {\n    return cookie.get('token');\n  },\n  getCookieByKey: function getCookieByKey(key) {\n    return cookie.get(key);\n  },\n  removeCookieByKey: function removeCookieByKey(key) {\n    cookie.remove(key);\n  },\n  isLoggedUser: function isLoggedUser() {\n    return new _Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var token, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = module.exports.getToken();\n                _context.prev = 1;\n\n                if (!token) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 5;\n                return axios.get('/api/user/' + jwtDecode(token).userId);\n\n              case 5:\n                user = _context.sent;\n\n                if (user) {\n                  if (user.data.error) reject(user.data.error);\n                  resolve(user);\n                }\n\n                _context.next = 10;\n                break;\n\n              case 9:\n                reject(\"There isn't logged user\");\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                reject(_context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n};","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/OVENO/utils/auth.js"],"names":["cookie","require","axios","jwtDecode","module","exports","setToken","token","set","expires","getToken","get","getCookieByKey","key","removeCookieByKey","remove","isLoggedUser","resolve","reject","userId","user","data","error"],"mappings":";;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAW;AACjBP,IAAAA,MAAM,CAACQ,GAAP,CAAW,OAAX,EAAoBD,KAApB,EAA2B;AAACE,MAAAA,OAAO,EAAE;AAAE;;AAAZ,KAA3B;AACH,GAHY;AAKbC,EAAAA,QAAQ,EAAE,oBAAM;AACZ,WAAOV,MAAM,CAACW,GAAP,CAAW,OAAX,CAAP;AACH,GAPY;AASbC,EAAAA,cAAc,EAAE,wBAACC,GAAD,EAAS;AACrB,WAAOb,MAAM,CAACW,GAAP,CAAWE,GAAX,CAAP;AACH,GAXY;AAabC,EAAAA,iBAAiB,EAAE,2BAACD,GAAD,EAAS;AACxBb,IAAAA,MAAM,CAACe,MAAP,CAAcF,GAAd;AACH,GAfY;AAgBbG,EAAAA,YAAY,EAAE,wBAAM;AAChB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACTX,gBAAAA,KADS,GACDH,MAAM,CAACC,OAAP,CAAeK,QAAf,EADC;AAAA;;AAAA,qBAGPH,KAHO;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIYL,KAAK,CAACS,GAAN,CAAU,eAAeR,SAAS,CAACI,KAAD,CAAT,CAAiBY,MAA1C,CAJZ;;AAAA;AAIDC,gBAAAA,IAJC;;AAKP,oBAAIA,IAAJ,EAAU;AACN,sBAAIA,IAAI,CAACC,IAAL,CAAUC,KAAd,EAAqBJ,MAAM,CAACE,IAAI,CAACC,IAAL,CAAUC,KAAX,CAAN;AACrBL,kBAAAA,OAAO,CAACG,IAAD,CAAP;AACH;;AARM;AAAA;;AAAA;AASJF,gBAAAA,MAAM,CAAC,yBAAD,CAAN;;AATI;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWXA,gBAAAA,MAAM,aAAN;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ;;AAAA;AAAA;AAAA;AAAA,QAAP;AAcH;AA/BY,CAAjB","sourcesContent":["const cookie = require('js-cookie');\r\nconst axios = require('axios');\r\nconst jwtDecode = require('jwt-decode');\r\n\r\nmodule.exports = {\r\n    setToken: (token) => {\r\n        cookie.set('token', token, {expires: 1 /*1 day*/});\r\n    },\r\n\r\n    getToken: () => {\r\n        return cookie.get('token');\r\n    },\r\n\r\n    getCookieByKey: (key) => {\r\n        return cookie.get(key);\r\n    },\r\n\r\n    removeCookieByKey: (key) => {\r\n        cookie.remove(key);\r\n    },\r\n    isLoggedUser: () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const token = module.exports.getToken();\r\n            try {\r\n                if (token) {\r\n                    const user = await axios.get('/api/user/' + jwtDecode(token).userId);\r\n                    if (user) {\r\n                        if (user.data.error) reject(user.data.error);\r\n                        resolve(user);\r\n                    }\r\n                } else reject(\"There isn't logged user\")\r\n            } catch (err) {\r\n                reject(err)\r\n            }\r\n        })\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"script"}