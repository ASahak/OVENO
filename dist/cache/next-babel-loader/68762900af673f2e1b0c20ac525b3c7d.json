{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(__SET_LOGGED),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(_rootSaga);\n\nimport { all, put } from 'redux-saga/effects';\nimport { __CHANGE_IS_LOGGED } from '../actions';\nimport store from 'store';\nexport function __SET_LOGGED(payload) {\n  return _regeneratorRuntime.wrap(function __SET_LOGGED$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put(store.dispatch(__CHANGE_IS_LOGGED(payload)));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function _rootSaga() {\n  return _regeneratorRuntime.wrap(function _rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([__SET_LOGGED]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":null,"metadata":{},"sourceType":"module"}