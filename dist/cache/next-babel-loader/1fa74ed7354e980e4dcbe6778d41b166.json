{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Slider from \"react-slick\";\nimport classes from './hot-seller.scss';\nimport Badge from './elements/Badge';\nimport axios from \"lib/axiosEnv\";\nimport { connect } from \"react-redux\";\n\nconst SampleNextArrow = props => {\n  const {\n    onClick\n  } = props;\n  return __jsx(\"span\", {\n    className: \"lnr lnr-chevron-right\",\n    onClick: onClick\n  });\n};\n\nconst SamplePrevArrow = props => {\n  const {\n    onClick\n  } = props;\n  return __jsx(\"span\", {\n    className: \"lnr lnr-chevron-left\",\n    onClick: onClick\n  });\n};\n\nclass HotSellers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const {\n        data\n      } = await axios.get('/api/products/getRandom', {\n        params: {\n          count: 6\n        }\n      });\n      if (data.error) console.error(data.error);else {\n        this.setState({\n          hotSeller: data.products\n        });\n      }\n    });\n\n    this.state = {\n      hotSeller: []\n    };\n    this.params = {\n      speed: 500,\n      autoplay: false,\n      autoplaySpeed: 4000,\n      pauseOnHover: true,\n      slidesToShow: 5,\n      slidesToScroll: 1,\n      nextArrow: __jsx(SampleNextArrow, null),\n      prevArrow: __jsx(SamplePrevArrow, null),\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4\n        }\n      }, {\n        breakpoint: 991,\n        settings: {\n          slidesToShow: 3\n        }\n      }, {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 3\n        }\n      }, {\n        breakpoint: 576,\n        settings: {\n          slidesToShow: 2\n        }\n      }, {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1\n        }\n      }]\n    };\n    this.isAdmin = this.isAdmin.bind(this);\n    this.isUser = this.isUser.bind(this);\n  }\n\n  isAdmin() {\n    return this.props.isUser && this.props.isUser.roleType === 'admin';\n  }\n\n  isUser() {\n    return this.props.isUser && this.props.isUser.roleType === 'user';\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: classes['slider-container']\n    }, __jsx(\"div\", {\n      className: classes['slider-container_title']\n    }, __jsx(\"h2\", null, \"Hot Sale\")), __jsx(Slider, _extends({}, this.params, {\n      className: classes['slick-slider-main']\n    }), this.state.hotSeller.map(slide => __jsx(Badge, {\n      isAdmin: this.isAdmin(),\n      isUser: this.isUser(),\n      noAccessAdmin: true,\n      mainData: slide,\n      key: slide._id\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isUser: state.auth.user\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(HotSellers);","map":null,"metadata":{},"sourceType":"module"}