{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from 'react';\nimport classesTopPanel from './top-panel.scss';\nimport { Container, Row, Col } from 'reactstrap';\nimport Link from 'next/link';\nimport { ModalToggle } from \"../../../../utils/common.js\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nvar _require = require('utils/auth'),\n    removeCookieByKey = _require.removeCookieByKey;\n\nvar TopPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TopPanel, _React$Component);\n\n  var _super = _createSuper(TopPanel);\n\n  function TopPanel(props) {\n    var _this;\n\n    _classCallCheck(this, TopPanel);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentLang: {\n        flag: require('../../../../assets/images/flag1.png'),\n        text: 'English'\n      },\n      secondLang: {\n        flag: require('../../../../assets/images/flag2.png'),\n        text: 'Armenian'\n      }\n    };\n    _this.changeLang = _this.changeLang.bind(_assertThisInitialized(_this));\n    _this.logout = _this.logout.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TopPanel, [{\n    key: \"changeLang\",\n    value: function changeLang() {\n      this.setState({\n        currentLang: this.state.secondLang,\n        secondLang: this.state.currentLang\n      });\n      toast.dark('Coming Soon!', {\n        position: \"top-right\",\n        autoClose: 3000,\n        pauseOnHover: false\n      });\n    }\n  }, {\n    key: \"__showLangModal\",\n    value: function __showLangModal() {\n      return this.refs.langBar && new ModalToggle().showModal(this.refs.langBar, false);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      removeCookieByKey('token');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: classesTopPanel.tp_panel_container\n      }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n        xs: \"3\"\n      }, __jsx(\"div\", {\n        className: classesTopPanel.lang_bar\n      }, __jsx(\"div\", {\n        className: classesTopPanel.selected_lang_bar,\n        onClick: this.__showLangModal.bind(this)\n      }, __jsx(\"img\", {\n        src: this.state.currentLang.flag,\n        alt: \"language\",\n        className: \"img-fluid\"\n      }), this.state.currentLang.text, __jsx(\"i\", {\n        className: \"fas fa-angle-down\"\n      })), __jsx(\"ul\", {\n        ref: \"langBar\",\n        type: \"none\",\n        className: classesTopPanel.leftovers_language_bar\n      }, __jsx(\"li\", {\n        onClick: this.changeLang\n      }, __jsx(\"img\", {\n        src: this.state.secondLang.flag,\n        alt: \"language\",\n        className: \"img-fluid\"\n      }), this.state.secondLang.text)))), __jsx(Col, {\n        xs: \"9\"\n      }, __jsx(\"div\", {\n        className: \"text-right \".concat(classesTopPanel.right_bar)\n      }, __jsx(\"ul\", {\n        type: \"none\",\n        className: \"d-inline-flex align-items-center p-0 m-0\"\n      }, this.props.user && __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/account\"\n      }, \"My Account\")), __jsx(\"li\", null, this.props.user ? __jsx(\"a\", {\n        href: \"/login\",\n        onClick: this.logout\n      }, \"Log out\") : __jsx(\"a\", {\n        href: \"/login\"\n      }, \"Log in\"))))))));\n    }\n  }]);\n\n  return TopPanel;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(TopPanel);","map":null,"metadata":{},"sourceType":"module"}