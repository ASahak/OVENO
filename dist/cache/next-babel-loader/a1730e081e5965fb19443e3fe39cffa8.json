{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from 'react';\n\nvar Select =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  var _super = _createSuper(Select);\n\n  function Select(props) {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    _this = _super.call(this, props);\n    _this.selectChange = _this.selectChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"selectChange\",\n    value: function selectChange(event) {\n      this.props.selectEncrypt(event.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var option = this.props.dataOptions.map(function (option) {\n        return __jsx(\"option\", {\n          key: option.value,\n          value: option.value\n        }, option.name);\n      });\n      return __jsx(React.Fragment, null, __jsx(\"select\", {\n        defaultValue: 'rsa',\n        required: true,\n        style: this.props.style,\n        onChange: this.selectChange,\n        className: \"jsx-3665154029\"\n      }, option), __jsx(_JSXStyle, {\n        id: \"3665154029\"\n      }, [\"select.jsx-3665154029{cursor:pointer;outline:none;}\", \"option[value=\\\"default\\\"][disabled].jsx-3665154029{display:none;}\", \"option.jsx-3665154029{color:black;}\"]));\n    }\n  }]);\n\n  return Select;\n}(React.Component);\n\nSelect.defaultProps = {\n  dataOptions: []\n};\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}