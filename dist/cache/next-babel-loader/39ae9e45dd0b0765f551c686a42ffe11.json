{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\");\n\nvar _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nvar cookie = require('js-cookie');\n\nvar axios = require('axios');\n\nvar jwtDecode = require('jwt-decode');\n\nmodule.exports = {\n  setToken: function setToken(token) {\n    cookie.set('token', token, {\n      expires: 1\n      /*1 day*/\n\n    });\n  },\n  getToken: function getToken() {\n    return cookie.get('token');\n  },\n  getCookieByKey: function getCookieByKey(key) {\n    return cookie.get(key);\n  },\n  removeCookieByKey: function removeCookieByKey(key) {\n    cookie.remove(key);\n  },\n  isLoggedUser: function isLoggedUser() {\n    return new _Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var token, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = module.exports.getToken();\n                _context.prev = 1;\n\n                if (!token) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 5;\n                return axios.get('/api/user/' + jwtDecode(token).userId);\n\n              case 5:\n                user = _context.sent;\n\n                if (user) {\n                  if (user.data.error) reject(user.data.error);\n                  resolve(user);\n                }\n\n                _context.next = 10;\n                break;\n\n              case 9:\n                reject(\"There isn't logged user\");\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                reject(_context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n};","map":null,"metadata":{},"sourceType":"script"}